(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function a(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=a(s);fetch(s.href,r)}})();const style="",app="";function CreateExampleJSON(){return window.go.main.App.CreateExampleJSON()}function GetJSONFromFile(e){return window.go.main.App.GetJSONFromFile(e)}function jsonifyData(e,t,a){switch(e){case"csv":return jsonifyCSV(t,a);case"tsv":return jsonifyTSV(t,a);default:return JSON.parse(t)}}function findFileType(e){let t=e.split("."),a;return t.includes("csv")?a="csv":t.includes("tsv")?a="tsv":a="json",a}function jsonifyTSV(e,t){let a=e.split(`
`);a[a.length-1].length<2&&(a=a.slice(0,a.length-1)),a[0].split("	").length;let n=a[0].split("	")[0].split(":")[1].trim(),s=a[1].split("	")[0].split(":")[1].trim(),r=a[2].split("	")[0].split(":")[1].trim(),o=a[3].split("	")[0].split(":")[1].trim(),l=a[4].split("	")[0].split(":")[1].trim();a[5];let u=a[5].split(":")[1].split('"')[0].split("	").map(p=>p.trim()),c=a.slice(8).map(p=>p.split("	").map(m=>Number(m))),d=JSON.parse(JSON.stringify(t,null,2));d.comments=n,d.datatype=s,d.layout.title={text:r},d.layout.xaxis.title={text:o},d.layout.yaxis.title={text:l};let f=[];return u.forEach((p,m)=>{let h=JSON.parse(JSON.stringify(t.data[0],null,2));h.name=p,h.x=c.map(y=>y[0]),h.y=c.map(y=>y[m+1]),h.uid+=String(m),f.push(h)}),d.data=f,d}function jsonifyCSV(e,t){let a=e.split(`
`);a[a.length-1].length<2&&(a=a.slice(0,a.length-1)),a[5].split(",").length;let n=a[0].split(",")[0].split(":")[1].trim(),s=a[1].split(",")[0].split(":")[1].trim(),r=a[2].split(",")[0].split(":")[1].trim(),o=a[3].split(",")[0].split(":")[1].trim(),l=a[4].split(",")[0].split(":")[1].trim(),u=a[5].split(":")[1].split('"')[0].split(",").map(m=>m.trim()),c=a.slice(7).map(m=>m.split(",").map(h=>Number(h))),d=JSON.parse(JSON.stringify(t,null,2));d.comments=n,d.datatype=s,d.layout.title={text:r},d.layout.xaxis.title={text:o},d.layout.yaxis.title={text:l};function f(m){return m!=""}u=u.filter(f);let p=[];return u.forEach((m,h)=>{let y=JSON.parse(JSON.stringify(t.data[0]),null,2);y.name=m,y.x=c.map(g=>g[0]),y.y=c.map(g=>g[h+1]),y.uid=y.uid+String(h),p.push(y)}),d.data=p,d}function createCSV(e){let t="";const a=e.layout.xaxis.title.text,n=e.layout.yaxis.title.text,s=e.comments,r=e.datatype,o=e.layout.title.text,l=e.data,u=e.data.length-1;e.data[u];let c="";l.forEach(d=>{const p=l.indexOf(d)===l.length-1?"":",";c+=d.name+p}),t+="comments: "+s+`\r
`,t+="DataType: "+r+`\r
`,t+="Chart_label: "+o+`\r
`,t+="x_label: "+a+`\r
`,t+="y_label: "+n+`\r
`,t+="series_names: "+c+`\r
`,t+="x_values",l.forEach((d,f)=>{const p=`_${f+1}`,m=f===l.length-1?`\r
`:"";t+=",y"+p+m}),l[0].x=l[0].x||[],l[0].y=l[0].y||[],l[0].x.forEach((d,f)=>{let p="";for(let m=0;m<l.length;m++)p+=","+l[m].y[f];t+=d+p+`\r
`});for(const d of l){const f=l[0].x;d.x.toString()!==f.toString()&&(t="Error: The CSV could not be created: currently the CSV export only supports creating CSV files for XYYY data and not for cases that require XYXY.")}return{csv:t,filename:o+".csv"}}function getBaseFileName(e){return e.split(".")[0]}async function readFileAsText(e){return new Promise((t,a)=>{const n=new FileReader;n.fileName=e.name,n.addEventListener("load",()=>t(n.result),{once:!0}),n.addEventListener("error",()=>a(new Error("File reading error"))),n.readAsText(e)})}window.jsonifyData=jsonifyData;window.findFileType=findFileType;window.jsonifyTSV=jsonifyTSV;window.jsonifyCSV=jsonifyCSV;window.getBaseFileName=getBaseFileName;window.readFileAsText=readFileAsText;let initialized=!1;const testURLCDN="https://cdn.jsdelivr.net/gh/AdityaSavara/JSONGrapher@main/src/AJV/6.12.6/ajv.bundle.min.js",config={useRemote:!1,moduleSourceBaseURL:"https://github.com/AdityaSavara/JSONGrapher/blob/main/src/",localBaseURL:"./src/"};async function canAccessCDN(e){try{return console.log(e,"CDN check"),(await fetch(e,{method:"HEAD"})).ok}catch{return!1}}async function canAccessLocal(){try{const e=config.localBaseURL+"AJV/6.12.6/ajv.bundle.min.js",t=await fetch(e,{method:"HEAD"});return config.checkLocal=t,t.ok}catch{return!1}}canAccessLocal().then(e=>config.checkLocal=e);canAccessCDN(testURLCDN).then(e=>{config.useRemote=e,config.checkCDN=e});let configPromise=null;async function initConfig(){if(!initialized){if(!configPromise){const e="https://cdn.jsdelivr.net/gh/AdityaSavara/JSONGrapher@main/src/AJV/6.12.6/ajv.bundle.min.js";configPromise=Promise.all([canAccessCDN(e),canAccessLocal()]).then(([t,a])=>{config.useRemote=t&&!a,initialized=!0;let n,s;t?n="CDN is available":n="CDN is unavailable",a?s="Local is available":s="Local is unavailable",config.useRemote?console.log(`Initialization: ${n}, ${s} \u2192 Using CDN`):console.log(`Initialization: ${n}, ${s} \u2192 Using Local`)})}await configPromise}}async function getConfig(){return initialized||await initConfig(),config}async function loadLibrary(e,t,a=!1){const n=await getConfig();let s;n.useRemote?s=n.moduleSourceBaseURL:s=n.localBaseURL;const r=s+t;return console.log("Library for global loaded:",e),loadScript(e,r,a)}async function loadScript(e,t,a=!1){return new Promise((n,s)=>{const r=createCDNURLasNeeded(t),o=document.querySelector(`script[src="${r}"]`),l=window[e];if(o&&!a){console.log(`Script for ${e} already present. Skipping injection.`),l?n(l):(o.addEventListener("load",()=>n(window[e])),o.addEventListener("error",()=>s(new Error(`Script load failed: ${r}`))));return}o&&a&&(o.remove(),console.log(`Previous script for ${e} removed. Reloading...`));const u=document.createElement("script");u.src=r,u.async=!0,u.onload=()=>{const c=window[e];c?(console.log(`${e} loaded successfully.`),n(c)):s(new Error(`Script loaded, but global "${e}" not found.`))},u.onerror=()=>{s(new Error(`Failed to load script: ${r}`))},document.head.appendChild(u)})}function createCDNURLasNeeded(e){if(/^(\.{0,2}\/|\/)/.test(e))return e;try{const t=new URL(e);if(t.hostname==="github.com"){const[,a,n,s,r,...o]=t.pathname.split("/");if(s==="blob"&&a&&n&&r&&o.length){const l=o.join("/");return`https://cdn.jsdelivr.net/gh/${a}/${n}@${r}/${l}`}}if(t.hostname==="raw.githubusercontent.com"){const[,a,n,s,...r]=t.pathname.split("/");if(a&&n&&s&&r.length){const o=r.join("/");return`https://cdn.jsdelivr.net/gh/${a}/${n}@${s}/${o}`}}return e}catch(t){return console.error(`Invalid URL or conversion failed: ${t.message}`),e}}async function loadJsonFromUrl(e){e=parseUrl$1(e);try{const t=await fetch(e),a=await t.json();return{status:t.status,data:a,failed:!1,error:null}}catch(t){return console.error(`Error fetching JSON from ${e}:`,t),{status:null,data:null,failed:!0,error:t.message}}}function isValidUrl$1(e){var t=new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i");return!!t.test(e)}function enforceSpecificExtension(e,t){t.charAt(0)==="."&&(t=t.slice(1));let a;return e.includes(".")?a=e.substring(0,e.lastIndexOf(".")):a=e,a+"."+t}function createDownloadCSVLink$1(e,t){t===null&&(t="JSONGrapherRecord.csv"),t=enforceSpecificExtension(t,"csv");let a,n;return a=new Blob([e],{type:"text/csv"}),n=document.createElement("a"),n.id="DownloadCSVLink",n.download=t,n.href=window.URL.createObjectURL(a),n.style.display="none",n}function createDownloadJSONLink$1(e,t){t===null&&(t="JSONGrapherRecord.json"),t=enforceSpecificExtension(t,"json");let a,n;return a=new Blob([JSON.stringify(e,null,4)],{type:"application/json"}),n=document.createElement("a"),n.id="DownloadJSONLink",n.download=t,n.href=window.URL.createObjectURL(a),n.style.display="none",n}function jsonToUrl(e){const t="http://www.jsongrapher.com?fromUrl=";let a=JSON.stringify(e);return t+encodeURIComponent(a)}function createCopyUrlLink$1(e){return"http://www.jsongrapher.com?fromUrl="+encodeURIComponent(e)}function parseUrl$1(e){const t=e.split("/");return t[2]==="github.com"?e.replace("github.com","raw.githubusercontent.com").replace("/blob/","/").replace("/tree/","/").replace("www.",""):t[2].includes("dropbox.com")?e.replace("www.dropbox.com","dl.dropboxusercontent.com").replace("dl=0","dl=1").replace("dl=1","dl=1").replace("raw=1","dl=1"):e}function addOpeningURLonButtonClick$1(e,t){return e.addEventListener("click",()=>{document.body.appendChild(t),t.click(),document.body.removeChild(t)}),e}function addDownloadingLinkToButton(e,t,a){const n=document.getElementById(e);a&&t.setAttribute("download",a),addOpeningURLonButtonClick$1(n,t)}window.loadJsonFromUrl=loadJsonFromUrl;window.isValidUrl=isValidUrl$1;window.createDownloadJSONLink=createDownloadJSONLink$1;window.createDownloadCSVLink=createDownloadCSVLink$1;window.jsonToUrl=jsonToUrl;window.createCopyUrlLink=createCopyUrlLink$1;window.addOpeningURLonButtonClick=addOpeningURLonButtonClick$1;window.addDownloadingLinkToButton=addDownloadingLinkToButton;window.parseUrl=parseUrl$1;const AjvConstructor=await loadLibrary("Ajv","/AJV/6.12.6/ajv.bundle.min.js"),ajvInstance=new AjvConstructor;async function setSchemaBaseURL(){const e=await getConfig();let t;return e.useRemote===!1?t="./src/schema/":t="https://github.com/AdityaSavara/JSONGrapher/tree/main/src/schema/",t}async function getSchemaLocation(e,t=!1,a=null){const n=await setSchemaBaseURL();if(e.datatype||(a.innerText+=`Warning: The datatype field was not found in the record provided. Accordingly, a schema check will not be performed and the record will not be fully validated. 
`,e.datatype=""),isValidUrl(e.datatype)){const s=e.datatype.replace(".schema.json",".schema.template.json");return t?s:e.datatype}else if(e.datatype.endsWith("schema.json"))if(t){const s=e.datatype.replace(".schema.json",".schema.template.json");return parseUrl$1(n+s)}else return parseUrl$1(n+e.datatype);else return parseUrl$1(t?n+e.datatype+".schema.template.json":n+e.datatype+".schema.json")}async function getSchemaType(e,t){const a=await setSchemaBaseURL();let n;const s=getSchemaLocation(e),r=getSchemaLocation(e,!0);try{const o=await fetch(s),l=await fetch(r),u=await o.text();l.status==404?n="{}":n=await l.text();const c=JSON.parse(u),d=JSON.parse(n);return[c,d]}catch{try{const u=await(await fetch(parseUrl$1(a+"0_PlotlyTemplate.json"))).text();return[JSON.parse(u),{}]}catch{return[{},{}]}}}async function prepareUniversalSchemas(){const e=await setSchemaBaseURL(),a=await(await fetch(parseUrl$1(e+"plot-schema.json"))).text(),n=JSON.parse(a),r=await(await fetch(parseUrl$1(e+"0_PlotlyTemplate.json"))).text(),o=await JSON.parse(r);return[n,o]}async function initializeUniversalSchemas(){try{const e=await prepareUniversalSchemas(),t=e[0],a=e[1];return[t,a]}catch(e){return console.log("Error from initializeJSONGrapher: ",e),[null,null]}}function mergeFigDictWithTemplate(e,t){const a=JSON.parse(JSON.stringify(e));return a.data.forEach(n=>{n.mode=t.data[0].mode,n.line=t.data[0].mode}),a}async function validateData(e,t){let[a,n]=await getSchemaType(e);Object.keys(a).length===0&&(t.innerText+=`Schema check: There was no Schema specific to this DataType, or the schema was not compatible. The default scatter plot schema was used.
`,a=schema);const s=compileSchema(a);if(!s(e))return console.log("validate errors: ",JSON.stringify(s.errors)),t.innerText+=`Json file does not match the schema. ${JSON.stringify(s.errors)}
`,t.innerText+=`Json file does not match the schema. ${JSON.stringify(s.errors)}
`,null;let o=e;return Object.keys(n).length!==0&&(o=mergeFigDictWithTemplate(e,n)),o}function compileSchema(e){if(!ajvInstance)throw new Error("AJV has not been initialized yet.");return ajvInstance.compile(e)}function getUnitFromLabel(e){if(!e)return console.warn("Label is undefined or null"),"";let t=e.match(/\((.*)\)/);return t?t[1].replace(/\*\*/g,"^"):""}function replaceSuperscripts$1(e){let t=e.replace(/\^\((.*?)\)|\*\*\((.*?)\)/g,(a,n,s)=>`<sup>${n||s}</sup>`);return t=t.replace(/<sup>\((\d+)\)<\/sup>/g,"<sup>$1</sup>"),t=t.replace(/<sup>\(-(\d+)\)<\/sup>/g,"<sup>-$1</sup>"),t=t.replace(/<sup>\((\w)\)<\/sup>/g,"<sup>$1</sup>"),t}function removeUnitFromLabel(e){const t=getUnitFromLabel(e);return e.replace(/\*\*/g,"^").replace(t,"").replace("()","")}function addCustomUnitToMathJS(e){try{math.unit(e)}catch{math.createUnit(e)}}function removeTaggedStrings(e){return e.replace(/<([^>]*)>/g,"$1")}function extractTaggedStrings$1(e){const t=e.match(/<([^>]*)>/g);if(!t)return[];const a=t.map(r=>r.slice(1,-1)),n=new Set(a);return Array.from(n).sort((r,o)=>o.length-r.length)}function tagMicroUnits(e){const t=["\xB5","\u03BC","\u{1D707}","\u{1D741}"];if(!t.some(l=>e.includes(l)))return e;const a=new RegExp(`[${t.join("")}]([a-zA-Z]+)`,"g");let n=[],s;const r=new RegExp(a.source,"g");for(;(s=r.exec(e))!==null;)n.push(s[0]);const o=[...new Set(n)].sort((l,u)=>u.length-l.length);for(const l of o){const u=`<microfrog${l.slice(1)}>`;e=e.split(l).join(u)}return e}function getUnitsScalingRatio(e,t){if(e===t)return 1;let a=e.replace(/\*\*/g,"^"),n=t.replace(/\*\*/g,"^");a=tagMicroUnits(a),n=tagMicroUnits(n);const s=extractTaggedStrings$1(a),r=extractTaggedStrings$1(n);for(const u of s)addCustomUnitToMathJS(u);for(const u of r)addCustomUnitToMathJS(u);a=removeTaggedStrings(a),n=removeTaggedStrings(n);function o(u){return u.replace(/\^\((-?\d+)\)/g,"^$1")}a=o(a),n=o(n);let l;try{const u=math.unit(1,a),c=math.unit(1,n);l=math.divide(u,c)}catch(u){if(u.name==="Error"){if(u.message.includes("Cannot convert")||u.message.includes("Missing key"))throw new Error(`Error during unit conversion in getUnitsScalingRatio: ${u.message}. Ensure all unit definitions are correctly set. Unit 1: ${e}, Unit 2: ${t}`);if(u.message.includes("invalid")||u.message.includes("formatted"))throw new Error(`Error during unit conversion in getUnitsScalingRatio: ${u.message}. Make sure unit values are valid and properly formatted. Unit 1: ${e}, Unit 2: ${t}`)}throw new Error(`An unexpected error occurred in getUnitsScalingRatio when trying to convert units: ${u.message}. Double-check that your records have the same units. Original Unit 1: ${e}, Original Unit 2: ${t}. Processed Unit 1: ${a}, Processed Unit 2: ${n}`)}return l}function scaleDataseriesDict(e,t=1,a=1,n=1){return e.x&&t!==1&&(e.x=datasereriesDict.x.map(s=>parseFloat(s)*t)),e.y&&a!==1&&(e.y=e.y.map(s=>parseFloat(s)*a)),e.z&&n!==1&&(e.z=e.z.map(s=>parseFloat(s)*n)),e}function convertUnits(e,t){return new Promise((a,n)=>{try{e.data.forEach(s=>{const r=getUnitFromLabel(e.layout.xaxis.title.text),o=getUnitFromLabel(e.layout.yaxis.title.text);if(t.unit.x!==r){const l=convert.fullConversion(r,t.unit.x);s.x=s.x.map(u=>{if(l.status==0)return parseFloat(u)*l.output.num;l.messages.forEach(c=>{errorDiv.innerText+=c.message+`
`})})}if(t.unit.y!==o){const l=convert.fullConversion(o,t.unit.y);s.y=s.y.map(u=>{if(l.status==0)return parseFloat(u)*l.output.num;l.messages.forEach(c=>{errorDiv.innerText+=c.message+`
`})})}}),a(e)}catch(s){n(s)}})}function cleanJsonFigDict(e,t=null){t===null&&(t=["title_field","extraInformation","nested_comments"]);let a=e;return t.includes("title_field")&&(a=updateTitleField(a)),t.includes("extraInformation")&&(a=removeExtraInformationField(a)),t.includes("nested_comments")&&(a=removeNestedComments(a)),t.includes("simulate")&&(a=removeSimulateField(a)),t.includes("equation")&&(a=removeEquationField(a)),t.includes("custom_units_chevrons")&&(a=removeCustomUnitsChevrons(a)),t.includes("bubble")&&(a=removeBubbleFields(a)),t.includes("trace_style")&&(a=removeTraceStyleField(a)),t.includes("3d_axes")&&(a=update3DAxes(a)),t.includes("superscripts")&&(a=updateSuperscriptsStrings(a)),a}function updateTitleField(e,t=1,a=10){if(t>a||typeof e!="object"||e===null)return e;for(const[n,s]of Object.entries(e))n==="title"&&typeof s=="string"?e[n]={text:s}:typeof s=="object"&&s!==null?e[n]=updateTitleField(s,t+1,a):Array.isArray(s)&&(e[n]=s.map(r=>typeof r=="object"&&r!==null?updateTitleField(r,t+1,a):r));return e}function updateSuperscriptsStrings(e,t=1,a=10){if(t>a||typeof e!="object"||e===null)return e;for(const[n,s]of Object.entries(e))n==="title"&&e[n].text&&(e[n].text=replaceSuperscripts(e[n].text)),n==="data"?e[n].forEach(r=>{r.name&&(r.name=replaceSuperscripts(r.name))}):typeof s=="object"&&s!==null?e[n]=updateSuperscriptsStrings(s,t+1,a):Array.isArray(s)&&(e[n]=s.map(r=>typeof r=="object"&&r!==null?updateSuperscriptsStrings(r,t+1,a):r));return e}function replaceSuperscripts(e){if(typeof e!="string")throw console.log("In the replaceSuperscripts Function, encountered an inputString that is not a string.",e),new TypeError("Expected a string but received: "+typeof e+" "+String(e));return e.replace(/\^\((.*?)\)|\*\*\((.*?)\)/g,(t,a,n)=>`<sup>${a||n}</sup>`).replace(/<sup>\((\d+)\)<\/sup>/g,"<sup>$1</sup>").replace(/<sup>\((\w)\)<\/sup>/g,"<sup>$1</sup>").replace(/<sup>\(-(\d+)\)<\/sup>/g,"<sup>-$1</sup>")}function convertTo3DLayout(e){let t=JSON.parse(JSON.stringify(e));return t.scene=t.scene||{},t.scene.xaxis=e.xaxis||{},t.scene.yaxis=e.yaxis||{},t.scene.zaxis=e.zaxis||{},delete t.xaxis,delete t.yaxis,delete t.zaxis,t}function removeBubbleFields(e){let t=!1;return e.data.forEach(a=>{let n=a.trace_style;if(typeof n=="string"&&(n.includes("bubble")&&!n.includes("bubble2d")&&!n.includes("bubble3d")&&(n=n.replace("bubble","bubble2d")),(n.toLowerCase().includes("bubble")||"max_bubble_size"in a)&&(t=!0),t)){if(n.toLowerCase().includes("bubble2d")&&("z"in a&&delete a.z,"z_points"in a&&delete a.z_points),delete a.max_bubble_size,"bubble_sizes"in a){const s=a.bubble_sizes;typeof s=="string"&&(n.toLowerCase().includes("bubble2d")&&!["x","y"].includes(s)&&delete a[s],n.toLowerCase().includes("bubble3d")&&!["x","y","z"].includes(s)&&delete a[s]),delete a.bubble_sizes}n.toLowerCase().includes("bubble2d")&&e.layout?.zaxis&&delete e.layout.zaxis}}),e}function update3DAxes(e){return e.layout.zaxis&&(e.layout=convertTo3DLayout(e.layout),e.data.forEach(t=>{t.type==="scatter3d"||t.type==="mesh3d"?delete t.z_matrix:t.type==="surface"&&"z_matrix"in t&&(delete t.z,console.warn("The Surface type of 3D plot has not been fully implemented yet. It requires replacing z with z_matrix after equation evaluation."))})),e}function removeExtraInformationField(e,t=1,a=10){return t>a||typeof e!="object"||e===null||Object.keys(e).forEach(n=>{n==="extraInformation"||n==="extra_information"?delete e[n]:typeof e[n]=="object"&&e[n]!==null?e[n]=removeExtraInformationField(e[n],t+1,a):Array.isArray(e[n])&&(e[n]=e[n].map(s=>typeof s=="object"&&s!==null?removeExtraInformationField(s,t+1,a):s))}),e}function removeNestedComments(e,t=!0){return typeof e!="object"||e===null||(Object.keys(e).forEach(a=>{typeof e[a]=="object"&&e[a]!==null?e[a]=removeNestedComments(e[a],!1):Array.isArray(e[a])&&(e[a]=e[a].map(n=>typeof n=="object"&&n!==null?removeNestedComments(n,!1):n))}),t||Object.keys(e).forEach(a=>{a==="comments"&&delete e[a]})),e}function removeSimulateField(e){return e.data.forEach(t=>{delete t.simulate}),e}function removeEquationField(e){return e.data.forEach(t=>{delete t.equation}),e}function removeTraceStyleField(e){return e.data.forEach(t=>{delete t.trace_style,delete t.tracetype}),e}function removeCustomUnitsChevrons(e){try{e.layout.xaxis.title.text=e.layout.xaxis.title.text.replace(/<|>/g,"")}catch{}try{e.layout.yaxis.title.text=e.layout.yaxis.title.text.replace(/<|>/g,"")}catch{}try{e.layout.zaxis.title.text=e.layout.zaxis.title.text.replace(/<|>/g,"")}catch{}return e}window.cleanJsonFigDict=cleanJsonFigDict;const math$1=await loadLibrary("math","mathjs/11.11.1/math.min.js");function parseVariable(e){const t=e.match(/([\d.]+)\s*(.*)/);if(!t)throw new Error("Invalid variable format.");const a=parseFloat(t[1]),n=t[2].trim();return math$1.multiply(a,math$1.unit(n))}function detectAndFormatUnits(e){const t=/(\d+(\.\d+)?)\s*([a-zA-Z]+)/g;return e.replace(t,(n,s,r,o)=>{let l=n;try{l=`(${s} ${o})`}catch{}return l})}function parseEquation(e,t){const a=Object.entries(t).sort((n,s)=>s[0].length-n[0].length);return a.forEach(([n,s])=>{(typeof s!="object"||!s.units)&&(e=e.replace(new RegExp(`\\b${n}\\b`,"g"),String(s)))}),a.forEach(([n,s])=>{if(typeof s=="object"&&s.units)try{e=e.replace(new RegExp(`\\b${n}\\b`,"g"),`(${s.value} ${s.units})`)}catch{console.warn(`Invalid unit conversion for variable: ${n}`)}}),e=detectAndFormatUnits(e),e}function solveEquation(e,t,a){e=e.replace(/\*\*/g,"^");const n=e.split("=");if(n.length!==2)throw new Error(`Equation must contain exactly one '=' sign and have the dependent variable isolated on one side. Equation: ${e}`);const s=n[0].trim(),r=n[1].trim();let o;if(s===a)o=r;else if(r===a)o=s;else throw new Error("Complex equation solving not implemented. Ensure the dependent variable is isolated on left or right side.");return o=parseEquation(o,t),o=o.replace(/\*\*/g,"^"),[math$1.evaluate(o)]}function parseEquationDict(e){function t(y){const b=y.trim().split(" ",2);if(b.length>1){const x=b[0],w=b[1];return[x,w]}else return[parseFloat(b[0]),null]}function a(y){const g={};for(const[b,x]of Object.entries(y))g[b]=t(x);return g}function n(y){const g=y.match(/[A-Za-z]+/g)||[];return{equationString:y,variablesList:g}}const s=e.hasOwnProperty("graphical_dimensionality")?e.graphical_dimensionality:2,r=a(e.constants),o=n(e.equation_string),l=t(e.x_variable),u=t(e.y_variable);let c=null;s===3&&(c=t(e.z_variable));const d={label:l[0],units:l[1]},f={label:u[0],units:u[1]};let p=null;s===3&&(p={label:c[0],units:c[1]});function m(y){const g={};for(const[b,[x,w]]of Object.entries(y))g[b]=w?`${x} ${w}`:`${x}`;return g}const h=m(r);if(s===2)return[h,r,o,d,f];if(s===3)return[h,r,o,d,f,p]}function generateMultiplicativePoints(e,t,a=null,n=null,s=!1){const l=t-e;let u=[];if(a!==null&&a>1){const d=[0],f=(1-0)/(a-1);for(let m=1;m<a;m++)d.push(0+m*f);const p=[0];if(n!==null&&n>0){let m=.01,h=0;for(;h+m<1;)h+=m,p.push(h),m*=n}u=p.length>d.length?p:d}else if(n!==null&&n>0){let d=.01,f=0;for(u=[0];f+d<1;)f+=d,u.push(f),d*=n}else if(a===null&&n===null){const d=.1111111111111111;u=Array.from({length:9},(f,p)=>0+p*d)}else throw new Error("Either numOfPoints or factor must be provided.");return u[u.length-1]!==1&&u.push(1),s?u.map(d=>t-(1-d)*l):u.map(d=>e+d*l)}function generatePointsBySpacing(e=10,t=0,a=1,n="linear"){let s=typeof n=="string"?n.toLowerCase():null,r=[];if(e===null&&(e=10),t===null&&(t=0),a===null&&(a=1),(s==="none"||s==="")&&(s="linear"),s==="linear")r=Array.from({length:e},(o,l)=>t+l*(a-t)/(e-1));else if(s==="logarithmic")r=Array.from({length:e},(o,l)=>t*math$1.pow(a/t,l/(e-1)));else if(s==="exponential")r=Array.from({length:e},(o,l)=>t*math$1.exp(l*math$1.log(a/t)/(e-1)));else if(typeof n=="number"&&n>0)r=generateMultiplicativePoints(t,a,e,n);else throw new Error(`Unsupported spacing type: ${n}`);return r}function generatePointsFromRangeDict(e,t="x"){const a=`${t}_range_default`,n=`${t}_range_limits`;let s,r;if(e[a])[s,r]=e[a];else throw new Error(`Missing ${a} in rangeDict.`);if(e[n]){const[o,l]=e[n];o!==null&&o>s&&(s=o),l!==null&&l<r&&(r=l)}if(s===void 0||r===void 0)throw new Error(`At least one min and one max must be specified between ${a} and ${n}.`);return generatePointsBySpacing(e.num_of_points,s,r,e.points_spacing)}function returnCustomUnitsMarkup(e,t){const a=t.slice().sort((n,s)=>s.length-n.length);for(const n of a){const s=n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),r=new RegExp(s,"g");e=e.replace(r,"<"+n+">")}return e}function extractTaggedStrings(e){const t=/<(.*?)>/g;let a;const n=[];for(;(a=t.exec(e))!==null;)n.push(a[1]);const s=Array.from(new Set(n));return s.sort((r,o)=>o.length-r.length),s}function convertInverseUnits(e,t=100){const a=[/1\/\((1\/.*?)\)/g,/1\/([a-zA-Z]+)/g];for(let n=0;n<t;n++){let s=e;if(a.forEach(r=>{s=s.replace(r,"($1)**(-1)")}),s===e)break;e=s}return e}function splitAtFirstDelimiter(e,t=" "){return e.split(t,2)}function cleanBrackets(e){return e.replace(/</g,"").replace(/>/g,"")}function evaluateEquationDict(e,t=!1){e=JSON.parse(JSON.stringify(e));let a=e.equation_string,n=e.graphical_dimensionality||2,s=!("graphical_dimensionality"in e);e.graphical_dimensionality=n,e.verbose!==void 0&&(t=e.verbose);const r=generatePointsFromRangeDict(e,"x");let o;n===3&&(o=generatePointsFromRangeDict(e,"y"));let l,u,c,d,f,p;if(n===2)[l,u,c,d,f]=parseEquationDict(e);else if(n===3)[l,u,c,d,f,p]=parseEquationDict(e);else throw new Error("Error: graphical_dimensionality not received and/or not evaluatable by current code.");let m=[];for(const _ of Object.keys(l)){const v=l[_],k=extractTaggedStrings(v);l[_]=cleanBrackets(l[_]),k.forEach(z=>{try{math$1.unit(z)}catch{math$1.createUnit(z)}}),m.push(...k)}let h=extractTaggedStrings(d.units);d.units=cleanBrackets(d.units),h.forEach(_=>{try{math$1.unit(_)}catch{math$1.createUnit(_)}}),m.push(...h),h=extractTaggedStrings(f.units),f.units=cleanBrackets(f.units),h.forEach(_=>{try{math$1.unit(_)}catch{math$1.createUnit(_)}}),m.push(...h),n===3&&(h=extractTaggedStrings(p.units),p.units=cleanBrackets(p.units),h.forEach(_=>{try{math$1.unit(_)}catch{math$1.createUnit(_)}}),m.push(...h)),h=extractTaggedStrings(a),a=cleanBrackets(a),h.forEach(_=>{try{math$1.unit(_)}catch{math$1.createUnit(_)}}),m.push(...h),m=[...new Set(m)],m.sort((_,v)=>v.length-_.length);let y=Object.keys(l);y.push(d.label),n===3&&y.push(f.label);let g="",b="",x="";n===3?g=p.label:g=f.label;let w=[],E="",R;if(n===2)R=r;else if(n===3){R=[];for(const _ of r)for(const v of o)R.push([_,v])}else throw new Error("Error: graphical_dimensionality not received and/or not evaluatable by current code.");for(const _ of R){n===2?l[d.label]=`${_} ${d.units}`:n===3&&(l[d.label]=`${_[0]} ${d.units}`,l[f.label]=`${_[1]} ${f.units}`),t&&console.log("Evaluating point:",_);const v=solveEquation(a,l,g);if(v)for(const k of v){const z=k.toString().split(" ",2);parseFloat(z[0]),!E&&z.length>1&&(E=math$1.unit(1,z[1]),n===2&&(x=E),n===3&&(b=E));let S=k;S=math$1.divide(k,E),n===2?w.push([_,S]):n===3&&w.push([_[0],_[1],S])}}let N,U,F;n===2?[N,U]=w.reduce(([_,v],[k,z])=>(_.push(k),v.push(z),[_,v]),[[],[]]):n===3&&([N,U,F]=w.reduce(([_,v,k],[z,S,O])=>(_.push(z),v.push(S),k.push(O),[_,v,k]),[[],[],[]]));const C=_=>{let v=_.toString().replace("1 ","");return v.includes("(")?v:`(${v})`};let D=C(d.units);n===2?x=C(x):n===3&&(x=C(f.units),b=C(b)),x=convertInverseUnits(x),D=convertInverseUnits(D),n===3&&(b=convertInverseUnits(b)),n===2&&(x=returnCustomUnitsMarkup(x,m)),n===3&&(b=returnCustomUnitsMarkup(b,m));let L={graphical_dimensionality:n,x_units:D,y_units:x,x_points:N,y_points:U};return n===3&&(L.z_units=b,L.z_points=F),s&&delete e.graphical_dimensionality,L}window.parseVariable=parseVariable;window.parseEquation=parseEquation;window.solveEquation=solveEquation;window.parseEquationDict=parseEquationDict;window.generateMultiplicativePoints=generateMultiplicativePoints;window.generatePointsBySpacing=generatePointsBySpacing;window.generatePointsFromRangeDict=generatePointsFromRangeDict;window.returnCustomUnitsMarkup=returnCustomUnitsMarkup;window.extractTaggedStrings=extractTaggedStrings;window.convertInverseUnits=convertInverseUnits;window.splitAtFirstDelimiter=splitAtFirstDelimiter;window.evaluateEquationDict=evaluateEquationDict;class Equation{constructor(t=null){if(this.equationDict={equation_string:"",x_variable:"",y_variable:"",constants:{},num_of_points:null,x_range_default:[0,1],x_range_limits:[null,null],x_points_specified:[],points_spacing:"",reverse_scaling:!1},t&&Object.keys(t).length>0)if(typeof t=="object"&&t!==null&&!Array.isArray(t))this.equationDict=this.#e(this.equationDict,t);else throw new TypeError("initialDict must be a plain JavaScript object.")}#e(t,a){for(const n in a)a.hasOwnProperty(n)&&(typeof a[n]=="object"&&a[n]!==null&&!Array.isArray(a[n])?(t[n]||(t[n]={}),this.#e(t[n],a[n])):Array.isArray(a[n])?t[n]=[...a[n]]:t[n]=a[n]);return t}validateUnit(t){if(!/^\d+(\.\d+)?(.*)?$/.test(t))throw new Error(`Invalid format: '${t}'. Expected a numeric value, optionally followed by a unit.`)}addConstants(t){if(typeof t=="object"&&t!==null&&!Array.isArray(t))for(let[a,n]of Object.entries(t))this.validateUnit(n),this.equationDict.constants[a]=n;else if(Array.isArray(t))for(let a of t)if(typeof a=="object"&&a!==null&&!Array.isArray(a))for(let[n,s]of Object.entries(a))this.validateUnit(s),this.equationDict.constants[n]=s;else throw new Error("Each item in the list must be a plain object containing a constant name-value pair.");else throw new TypeError("Expected a plain object for one constant or an array of plain objects for multiple constants.")}setXVariable(t){this.equationDict.x_variable=t}setYVariable(t){this.equationDict.y_variable=t}setZVariable(t){this.equationDict.z_variable=t}setXRangeDefault(t){if(!Array.isArray(t)||t.length!==2||!t.every(a=>typeof a=="number"))throw new Error("x_range must be an array of two numeric values.");this.equationDict.x_range_default=t}setXRangeLimits(t){if(!Array.isArray(t)||t.length!==2)throw new Error("x_limits must be an array of two elements (numeric or null).");if(!t.every(a=>typeof a=="number"||a===null))throw new Error("Elements in x_limits must be numeric or null.");this.equationDict.x_range_limits=t}setYRangeDefault(t){if(!Array.isArray(t)||t.length!==2||!t.every(a=>typeof a=="number"))throw new Error("y_range must be an array of two numeric values.");this.equationDict.y_range_default=t}setYRangeLimits(t){if(!Array.isArray(t)||t.length!==2)throw new Error("y_limits must be an array of two elements (numeric or null).");if(!t.every(a=>typeof a=="number"||a===null))throw new Error("Elements in y_limits must be numeric or null.");this.equationDict.y_range_limits=t}setZRangeDefault(t){if(!Array.isArray(t)||t.length!==2||!t.every(a=>typeof a=="number"))throw new Error("z_range must be an array of two numeric values.");this.equationDict.z_range_default=t}setZRangeLimits(t){if(!Array.isArray(t)||t.length!==2)throw new Error("z_limits must be an array of two elements (numeric or null).");if(!t.every(a=>typeof a=="number"||a===null))throw new Error("Elements in z_limits must be numeric or null.");this.equationDict.z_range_limits=t}getZMatrix(t=null,a=null,n=null){t===null&&(t=this.equationDict.x_points),a===null&&(a=this.equationDict.y_points),n===null&&(n=this.equationDict.z_points);const s=[...new Set(t)].sort((u,c)=>u-c),r=[...new Set(a)].sort((u,c)=>u-c),o=Array(s.length).fill(0).map(()=>Array(r.length).fill(NaN));let l=0;for(let u of s)for(let c of r){const d=s.indexOf(u),f=r.indexOf(c);if(this.equationDict.graphical_dimensionality===3&&n&&n[l]!==void 0)o[d][f]=n[l],l++;else if(this.equationDict.graphical_dimensionality!==3&&t&&a&&n){for(let p=0;p<t.length;p++)if(t[p]===u&&a[p]===c){o[d][f]=n[p];break}}}return o}setNumOfPoints(t){if(!Number.isInteger(t)||t<=0)throw new Error("Number of points must be a positive integer.");this.equationDict.num_of_points=t}setEquation(t){this.equationDict.equation_string=t}getEquationDict(){return this.equationDict}evaluateEquation(t=!1,a=!1){const n=evaluateEquationDict(this.equationDict,a);let s=n.graphical_dimensionality!==void 0?n.graphical_dimensionality:2;if(this.equationDict.x_units=n.x_units,this.equationDict.y_units=n.y_units,this.equationDict.x_points=n.x_points,this.equationDict.y_points=n.y_points,s===3&&(this.equationDict.z_units=n.z_units,this.equationDict.z_points=n.z_points),t===!0){const r={};r.x_units=this.equationDict.x_units,r.y_units=this.equationDict.y_units,r.x_points=this.equationDict.x_points,r.y_points=this.equationDict.y_points,s===3&&(r.z_units=this.equationDict.z_units,r.z_points=this.equationDict.z_points),this.equationDict=r}return this.equationDict}printEquationDict(t=!0,a=!0,n=!1){let s;if(a===!0?s=this.evaluateEquation(n):s={...this.equationDict},n===!0){const r={};this.equationDict.x_units!==void 0&&(r.x_units=this.equationDict.x_units),this.equationDict.y_units!==void 0&&(r.y_units=this.equationDict.y_units),this.equationDict.x_points!==void 0&&(r.x_points=this.equationDict.x_points),this.equationDict.y_points!==void 0&&(r.y_points=this.equationDict.y_points),this.equationDict.z_units!==void 0&&(r.z_units=this.equationDict.z_units),this.equationDict.z_points!==void 0&&(r.z_points=this.equationDict.z_points),s=r}if(t===!1)console.log(s);else{const r=JSON.stringify(s,null,4);console.log(r)}}exportToJsonFile(t,a=!0,n=!1){let s;if(a===!0?s=this.evaluateEquation(n):s={...this.equationDict},n===!0){const o={};this.equationDict.x_units!==void 0&&(o.x_units=this.equationDict.x_units),this.equationDict.y_units!==void 0&&(o.y_units=this.equationDict.y_units),this.equationDict.x_points!==void 0&&(o.x_points=this.equationDict.x_points),this.equationDict.y_points!==void 0&&(o.y_points=this.equationDict.y_points),this.equationDict.z_units!==void 0&&(o.z_units=this.equationDict.z_units),this.equationDict.z_points!==void 0&&(o.z_points=this.equationDict.z_points),s=o}console.log(`(Simulated) Exporting to file: ${t}`);const r=JSON.stringify(s,null,4);return console.log(`JSON to be exported:
`,r),s}}function checkSimulate(e){return!!e.simulate}async function getRawContent(e){return new Promise(async(t,a)=>{try{const s=await(await fetch(e)).text();t(s)}catch(n){a(n)}})}async function getAndRunSimulateScript(e,t,a){return new Promise(async(n,s)=>{try{const r=document.createElement("script"),o=parseUrl(e.simulate.model),l=await getRawContent(o);if(r.textContent=l,document.getElementsByTagName("head")[0].appendChild(r),typeof simulate!="function")throw console.error("Error: simulate function is not defined!"),new Error("simulate function is not defined");const u=await simulate(e);Array.isArray(u)&&console.log("Simulate function failed, simulate function log:",JSON.stringify(u)),n(u)}catch(r){console.error("Error occurred in getAndRunSimulateScript:",r),s({status:"error",error:"Error: "+r})}})}function maybeConvertSimulatedDataUnits(e,t,a){return new Promise((n,s)=>{try{let r=JSON.parse(JSON.stringify(t));const o=getUnitFromLabel(e.layout.xaxis.title.text),l=getUnitFromLabel(e.layout.yaxis.title.text),u=getUnitFromLabel(t.data.x_label),c=getUnitFromLabel(t.data.y_label);if(o!==u){const d=convert.fullConversion(u,o),f=r.data.x.map(p=>{if(d.status==0)return parseFloat(p)*d.output.num;d.messages.forEach(m=>{errorDiv.innerText+=m.message+` (error message from UUC fullConversion, returned by maybeConvertSimulatedDataUnits)
`})});r.data.x=f,r.data.x_label=removeUnitFromLabel(r.data.x_label)+"("+o+")"}if(l!==c){const d=convert.fullConversion(c,l),f=r.data.y.map(p=>{if(d.status==0)return parseFloat(p)*d.output.num;d.messages.forEach(m=>{errorDiv.innerText+=m.message+` (error message from UUC fullConversion, returned by in maybeConvertSimulatedDataUnits)
`})});r.data.y=f,r.data.y_label=removeUnitFromLabel(r.data.y_label)+"("+l+")"}n(r)}catch(r){s({status:"error",error:"Error: "+r})}})}function mergeSimulationData(e,t,a){return new Promise((n,s)=>{try{t.layout.xaxis.title.text||(t.layout.xaxis.title.text=e.data.x_label),t.layout.yaxis.title.text||(t.layout.yaxis.title.text=e.data.y_label),t.data[a].x=e.data.x,t.data[a].y=e.data.y,n(t)}catch(r){s({status:"error",error:"Error: "+r})}})}async function simulateByIndexAndPopulateFigDict(e,t){const a=e.data[t];if(!a)throw new Error(`No dataSet found at index ${t}`);const n=await getAndRunSimulateScript(a),s=await maybeConvertSimulatedDataUnits(e,n),r=await mergeSimulationData(s,e,t);return{_jsonified:e,simulatedJsonified:r}}function updateImplicitDataSeriesXRanges(e,t){const a=JSON.parse(JSON.stringify(e)),n=t.min_x,s=t.max_x;for(const r of a.data||[])if(r.equation){const o=r.equation,l=n!==null?n:o.x_range_default?o.x_range_default[0]:null,u=s!==null?s:o.x_range_default?o.x_range_default[1]:null;o.x_range_default=[l,u]}else if(r.simulate){const o=r.simulate,l=n!==null?n:o.x_range_default?o.x_range_default[0]:null,u=s!==null?s:o.x_range_default?o.x_range_default[1]:null;o.x_range_default=[l,u]}return a}function getFigDictRanges(e,t=!1,a=!1){const n={min_x:null,max_x:null,min_y:null,max_y:null},s={min_x:[],max_x:[],min_y:[],max_y:[]};for(const c of e.data||[]){let d=null,f=null,p=null,m=null,h=null;if(c.equation?t||(h=c.equation):c.simulate&&(a||(h=c.simulate)),h){const y=h.x_range_default||[null,null],g=h.x_range_limits||[null,null];d=y[0]!==null?y[0]:g[0],f=y[1]!==null?y[1]:g[1]}if(d===null&&c.x&&c.x.length>0){const y=c.x.filter(g=>g!==null);y.length>0&&(d=Math.min(...y))}if(f===null&&c.x&&c.x.length>0){const y=c.x.filter(g=>g!==null);y.length>0&&(f=Math.max(...y))}if(p===null&&c.y&&c.y.length>0){const y=c.y.filter(g=>g!==null);y.length>0&&(p=Math.min(...y))}if(m===null&&c.y&&c.y.length>0){const y=c.y.filter(g=>g!==null);y.length>0&&(m=Math.max(...y))}s.min_x.push(d),s.max_x.push(f),s.min_y.push(p),s.max_y.push(m)}const r=s.min_x.filter(c=>c!==null),o=s.max_x.filter(c=>c!==null),l=s.min_y.filter(c=>c!==null),u=s.max_y.filter(c=>c!==null);return n.min_x=r.length>0?Math.min(...r):null,n.max_x=o.length>0?Math.max(...o):null,n.min_y=l.length>0?Math.min(...l):null,n.max_y=u.length>0?Math.max(...u):null,[n,s]}function separateLabelTextFromUnits(e){const t=(e.match(/\(/g)||[]).length,a=(e.match(/\)/g)||[]).length;if(t!==a)throw new Error(`Mismatched parentheses in input string: '${e}'`);const n={text:e,units:""},s=e.indexOf("("),r=e.lastIndexOf(")");let o=!1;if(s!==-1&&r!==-1){const l=e.slice(0,s)+e.slice(s+1,r)+e.slice(r+1),u=l.indexOf(")"),c=l.indexOf("(");c!==-1&&u<c&&(o=!0)}return o?(n.text=e.slice(0,s).trim(),n.units=e.slice(s).trim()):s!==-1&&r!==-1&&(n.text=e.slice(0,s).trim(),n.units=e.slice(s+1,r).trim()),n}async function simulateAsNeededInFigDict(e){for(const t of e.data){const a=e.data.indexOf(t);if(checkSimulate(t)){const s=await simulateByIndexAndPopulateFigDict(e,a);s.simulatedJsonified,e=s._jsonified}}return e}function evaluateEquationsAsNeededInFigDict(e){let t=JSON.parse(JSON.stringify(e));const a=t.data;if(!a)return t;for(let n=0;n<a.length;n++)"equation"in a[n]&&(t=evaluateEquationForDataSeriesByIndex(t,n));return t}function evaluateEquationForDataSeriesByIndex(e,t,a="auto"){let n=JSON.parse(JSON.stringify(e));const s=n.data;if(!s||t<0||t>=s.length)return console.warn("Invalid dataSeriesIndex or no data in figDict."),n;const r=s[t];if("equation"in r)try{const l=new Equation(r.equation).evaluateEquation(a);let u=2;l&&"graphical_dimensionality"in l&&(u=l.graphical_dimensionality);const c=JSON.parse(JSON.stringify(r));if(c.equation=l,c.x_label=c.equation.x_variable,c.y_label=c.equation.y_variable,c.x=l.x_points,c.y=l.y_points,u===3&&(c.z_label=c.equation.z_variable,c.z=l.z_points),c.x_label||c.y_label||c.z_label){const d=n.layout?.xaxis?.title?.text||"",f=n.layout?.yaxis?.title?.text||"";let p="";c.z_label&&n.layout?.scene?.zaxis?.title?.text?p=n.layout.scene.zaxis.title.text:c.z_label&&n.layout?.zaxis?.title?.text&&(p=n.layout.zaxis.title.text);const m=separateLabelTextFromUnits(d).units,h=separateLabelTextFromUnits(f).units;if(m!==""||h!==""||existingRecordZUnits!==""){const y=separateLabelTextFromUnits(c.x_label).units,g=separateLabelTextFromUnits(c.y_label).units,b=getUnitsScalingRatio(y,m),x=getUnitsScalingRatio(g,h);scaleDataseriesDict(c,b,x)}delete c.x_label,delete c.y_label}c.type||(u===2?c.type="spline":u===3&&(c.type="mesh3d")),s[t]=c}catch(o){console.error(`Error evaluating equation for data series at index ${t}:`,o)}return n.data=s,n}function updateImplicitDataSeriesData(e,t,a=!0,n=!1){let s;n===!1?s=JSON.parse(JSON.stringify(e)):s=e;const r=s.data||[],o=t.data||[];if(a&&r.length===o.length)for(let l=0;l<r.length;l++){const u=r[l],c=o[l];("equation"in u||"simulate"in u)&&(u.x=c.x||[],u.y=c.y||[],"z"in c&&(u.z=c.z||[]))}else{const l={};for(const u of o)"name"in u&&(l[u.name]=u);for(const u of r)if("equation"in u||"simulate"in u){const c=u.name;if(c&&l[c]){const d=l[c];u.x=d.x||[],u.y=d.y||[],"z"in d&&(u.z=d.z||[])}}}return s}async function executeImplicitDataSeriesOperations(e,t=!0,a=!0,n=!0,s=!1,r=!1){let o=JSON.parse(JSON.stringify(e)),l=!1;for(const u of e.data||[])if("equation"in u||"simulate"in u){l=!0;break}if(l){if(n){const[u]=getFigDictRanges(e,!0,!0);o=updateImplicitDataSeriesXRanges(e,u)}t&&(o=await simulateAsNeededInFigDict(o),e=updateImplicitDataSeriesData(e,o,!0,!0)),a&&(o=evaluateEquationsAsNeededInFigDict(o),e=updateImplicitDataSeriesData(e,o,!0,!0))}return s&&(e?.plot_style?.layout_style||"").includes("offset2d")&&(e=extractAndImplementOffsets(o,!1)),r&&(e?.plot_style?.layout_style||"").includes("arrange2dTo3d")&&(e=implementArrange2dTo3d(o,!1)),e}function isFloatScalar(e){return typeof e=="number"||!isNaN(parseFloat(e))&&isFinite(e)}function extractAndImplementOffsets(e,t=!1,a=2){const n=t?e:structuredClone(e);let s="";if("offset"in e.layout){let r=e.layout.offset;if(isFloatScalar(r)||(typeof r=="string"?s=r:r=r.map(o=>parseFloat(o))),a===2){let o=0;for(let l=0;l<e.data.length;l++){const u=e.data[l].y.map(Number);if(l===0)n.data[l].y=[...u];else{let c;s?c=e.data[l][s].map(Number):c=Array.isArray(r)?r.map(Number):new Array(u.length).fill(Number(r)),o=o===0?[...c]:o.map((d,f)=>d+c[f]),n.data[l].y=u.map((d,f)=>d+o[f])}}}}else if(a===2)return determineAndApplyOffset2dForFigDict(e,t);return n}function determineAndApplyOffset2dForFigDict(e,t=!1){const a=t?e:structuredClone(e),n=extractAllXYSeriesDataFromFigDict(a),s=applyVerticalOffset2dForArrayList(n);return injectXYSeriesDataIntoFigDict(a,s)}function extractAllXYSeriesDataFromFigDict(e){const t=[];for(const a of e.data||[]){const n=a.x||[],s=a.y||[];if(n.length===s.length){const r=n.map((o,l)=>[Number(o),Number(s[l])]);t.push(r)}}return t}function applyVerticalOffset2dForArrayList(e,t=1.2){const a=e.map(s=>{if(!s.length)return 0;const r=s.map(([o,l])=>l);return Math.max(...r)-Math.min(...r)}),n=a.length?Math.max(...a)*t:0;return e.map((s,r)=>s.length?s.map(([o,l])=>[o,l+r*n]):[])}function injectXYSeriesDataIntoFigDict(e,t){const a=e.data.length;if(t.length!==a)throw new Error("Mismatch between number of traces and number of data series.");for(let n=0;n<a;n++){const s=t[n];e.data[n].x=s.map(r=>r[0]),e.data[n].y=s.map(r=>r[1])}return e}function implementArrange2dTo3d(e,t=!1){const a=JSON.parse(JSON.stringify(e)),n=JSON.parse(JSON.stringify(e));let s=e.layout.vertical_axis_variable||{};Object.keys(s).length===0&&(s="y");let r=e.layout.left_axis_variable||{};Object.keys(r).length===0&&(r="x");let o=e.layout.right_axis_variable||{};if(Object.keys(o).length===0){o="data_series_index_vector";for(let l=0;l<e.data.length;l++){const u=e.data[l].x.length,c=Array(u).fill(l);a.data[l].data_series_index_vector=c}}["xaxis","yaxis","zaxis"].forEach(l=>{n.layout[l]=n.layout[l]||{},n.layout[l].title=n.layout[l].title||{},n.layout[l].title.text=""}),n.layout.yaxis.title.text=a.layout[`${r}axis`].title.text,o!=="data_series_index_vector"?n.layout.xaxis.title.text=a.layout[`${o}axis`].title.text:n.layout.xaxis.title.text="Data Set",n.layout.zaxis.title.text=a.layout[`${s}axis`].title.text;for(let l=0;l<e.data.length;l++){const u=n.data[l],c=a.data[l];u.trace_style=u.trace_style.includes("scatter")?"scatter3d":"curve3d",u.y=c[r],u.x=c[o],u.z=c[s]}return n}window.executeImplicitDataSeriesOperations=executeImplicitDataSeriesOperations;const trace_styles_collection_library={default:{scatter_spline:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:10}},scatter_line:{type:"scatter",mode:"lines+markers",line:{shape:"linear",width:2},marker:{size:10}},line:{type:"scatter",mode:"lines",line:{shape:"linear",width:2},marker:{size:10}},lines:{type:"scatter",mode:"lines",line:{shape:"linear",width:2},marker:{size:10}},scatter:{type:"scatter",mode:"markers",marker:{size:10}},bubble:{type:"scatter",mode:"markers",marker:{color:"auto",colorscale:"Jet",showscale:!0}},bubble2d:{type:"scatter",mode:"markers",marker:{color:"auto",colorscale:"Jet",showscale:!0}},spline:{type:"scatter",mode:"lines",line:{shape:"spline",width:2},marker:{size:0}},bar:{type:"bar",marker:{color:"blue",opacity:.8,line:{color:"black",width:2}}},default:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:10}},curve3d:{mode:"lines",type:"scatter3d",line:{width:4}},scatter3d:{mode:"markers",type:"scatter3d",marker:{color:"",colorscale:"Jet",showscale:!0}},mesh3d:{type:"mesh3d",intensity:[],colorscale:"Jet",showscale:!0},bubble3d:{mode:"markers",type:"scatter3d",marker:{color:"",colorscale:"Jet",showscale:!0}},heatmap:{type:"heatmap",colorscale:"Viridis"}},minimalist:{scatter_spline:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:1},marker:{size:6}},scatter:{type:"scatter",mode:"lines",line:{shape:"linear",width:1},marker:{size:0}},spline:{type:"scatter",mode:"lines",line:{shape:"spline",width:1},marker:{size:0}},bar:{type:"bar"},heatmap:{type:"heatmap",colorscale:"Greys"}},bold:{scatter_spline:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:4},marker:{size:10}},scatter:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:4},marker:{size:12}},spline:{type:"scatter",mode:"lines",line:{shape:"spline",width:4},marker:{size:0}},bar:{type:"bar"},heatmap:{type:"heatmap",colorscale:"Jet"}},scatter:{scatter_spline:{type:"scatter",mode:"markers",marker:{size:10}},scatter:{type:"scatter",mode:"markers",marker:{size:10}},spline:{type:"scatter",mode:"markers",marker:{size:10}},bar:{type:"scatter",mode:"markers",marker:{size:10}},heatmap:{type:"heatmap",colorscale:"Viridis"}},scatter_spline:{scatter_spline:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:0}},scatter:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:0}},spline:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:0}},bar:{type:"scatter",mode:"lines+markers",line:{shape:"spline",width:2},marker:{size:0}},heatmap:{type:"heatmap",colorscale:"Viridis"}}},layout_styles_library={default:{layout:{paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:18},x:.5},xaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,title:{font:{size:18}},tickfont:{size:18}},yaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,title:{font:{size:18}},tickfont:{size:18}},legend:{title:{font:{size:10}},font:{size:10}}}},offset2d:{layout:{paper_bgcolor:"rgba(0,0,0,0)",plot_bgcolor:"rgba(0,0,0,0)",title:{font:{size:18},x:.5},xaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,title:{font:{size:18}},tickfont:{size:18}},yaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,title:{font:{size:18}},tickfont:{size:18}},legend:{title:{font:{size:10}},font:{size:10}}}},default3d:{layout:{scene:{aspectmode:"cube"},title:{font:{size:32},x:.5},xaxis:{title:{font:{size:12}},tickfont:{size:12}},yaxis:{title:{font:{size:12}},tickfont:{size:12}},zaxis:{title:{font:{size:12}},tickfont:{size:12}},legend:{title:{font:{size:10}},font:{size:10}}}},arrange2dTo3d:{layout:{scene:{aspectmode:"cube"},title:{font:{size:32},x:.5},xaxis:{title:{font:{size:12}},tickfont:{size:12}},yaxis:{title:{font:{size:12}},tickfont:{size:12}},zaxis:{title:{font:{size:12}},tickfont:{size:12}},legend:{title:{font:{size:10}},font:{size:10}}}},Nature:{layout:{title:{font:{size:32,family:"Times New Roman",color:"black"}},font:{size:25,family:"Times New Roman"},paper_bgcolor:"white",plot_bgcolor:"white",xaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,linecolor:"black",linewidth:2,ticks:"outside",tickwidth:2,tickcolor:"black"},yaxis:{showgrid:!0,gridcolor:"#ddd",gridwidth:1,linecolor:"black",linewidth:2,ticks:"outside",tickwidth:2,tickcolor:"black"}}},Science:{layout:{title:{font:{size:32,family:"Arial",color:"black"}},font:{size:25,family:"Arial"},paper_bgcolor:"white",plot_bgcolor:"white",xaxis:{showgrid:!0,gridcolor:"#ccc",gridwidth:1,linecolor:"black",linewidth:2,ticks:"outside",tickwidth:2,tickcolor:"black"},yaxis:{showgrid:!0,gridcolor:"#ccc",gridwidth:1,linecolor:"black",linewidth:2,ticks:"outside",tickwidth:2,tickcolor:"black"}}}};function parsePlotStyle(e){let t;if(e===null)t={layout_style:null,trace_styles_collection:null};else if(typeof e=="string")t={layout_style:e,trace_styles_collection:e};else if(Array.isArray(e)&&e.length===2)t={layout_style:e[0],trace_styles_collection:e[1]};else if(typeof e=="object")e.trace_styles_collection||(e.trace_style_collection?(console.warn("Warning: plotStyle has 'trace_style_collection', this key should be 'trace_styles_collection'. Using it, but fix the spelling error."),e.trace_styles_collection=e.trace_style_collection):e.traces_style_collection?(console.warn("Warning: plotStyle has 'traces_style_collection', this key should be 'trace_styles_collection'. Using it, but fix the spelling error."),e.trace_styles_collection=e.traces_style_collection):e.trace_styles_collection=""),e.layout_style||(e.layout_style=""),t={layout_style:e.layout_style??null,trace_styles_collection:e.trace_styles_collection??null};else throw new Error("Invalid plot style: Must be null, a string, an array of two items, or an object with valid fields.");return t}function applyPlotStyleToPlotlyDict(e,t=null){return t===null&&(t={layout_style:{},trace_styles_collection:{}}),t=parsePlotStyle(t),t.layout_style??="",t.trace_styles_collection??="",String(t.layout_style).toLowerCase()!=="none"&&(t.layout_style===""&&(t.layout_style="default","z"in e.data[0]&&console.warn("Warning: No layout_style provided and 'z' field found in first data series. For 'bubble2d' plots, it is recommended to set layout_style to 'default'. For 'mesh3d' graphs and 'scatter3d' graphs, it is recommended to set layout_style to 'default3d'. Set layout_style to 'none' or another layout_style to avoid this warning.")),e=applyLayoutStyleToPlotlyDict(e,t.layout_style)),String(t.trace_styles_collection).toLowerCase()!=="none"&&(t.trace_styles_collection===""&&(t.trace_styles_collection="default"),e=applyTraceStylesCollectionToPlotlyDict(e,t.trace_styles_collection)),e}function applyTraceStylesCollectionToPlotlyDict(e,t="",a=""){let n;return typeof t=="string"?n=t:n=t.name,e.data&&Array.isArray(e.data)&&(e.data=e.data.map(s=>applyTraceStyleToSingleDataSeries(s,t,a))),e.plot_style||(e.plot_style={}),e.plot_style.trace_styles_collection=n,e}function applyTraceStyleToSingleDataSeries(e,t="",a=""){if(typeof e!="object"||e===null)return e;if(typeof a=="object"&&(e.trace_style=a),a!=="")e.trace_style=a;else{if(a=e.trace_style||"",String(a).toLowerCase()==="none")return e;typeof a=="object"&&(a=a)}if(typeof a=="string"&&(t===""||String(t).toLowerCase()==="none")||String(a).toLowerCase()==="none")return e;if(typeof a=="string"&&(a.toLowerCase()==="nature"||a.toLowerCase()==="science")&&(a="default"),t==="default"&&a===""&&e?.z){e.trace_style="scatter3d";const u=e?.uid||"",c=e?.name||"";console.warn(`Warning: A dataseries was found with no trace_style but with a 'z' field. uid: ${u}. name: ${c}. The trace style for this dataseries is being set to scatter3d.`)}const n=trace_styles_collection_library;let s;typeof t=="object"?s=t:(s=n[t]||{},Object.keys(s).length===0&&(console.warn(`Warning: traceStylesCollection named '${t}' not found. Using 'default' traceStylesCollection instead.`),s=n.default||{}));let r=a||e.trace_style||"";r===""&&(r=Object.keys(s)[0]);let o="",l="";typeof r=="string"&&(r.includes("__")&&([r,o]=r.split("__")),r.includes("bubble")&&!r.includes("bubble2d")&&!r.includes("bubble3d")&&(r=r.replace("bubble","bubble2d"))),o.endsWith("_r")&&(console.warn("Warning: Colorscale reverse with _r is not currently supported by browser-based Plotly. Colorscale reversing has been removed."),o=o.slice(0,-2)),o&&(o=o.charAt(0).toUpperCase()+o.slice(1)),{dataSeries:e,colorscaleStructure:l}=determineColorScaleStructureFirstHalf(e,r),r in s?r=s[r]:r in s||(console.warn(`Warning: traceStyle named '${r}' not found in traceStylesCollection '${t}'. Using the first traceStyle in traceStylesCollection '${t}'.`),r=Object.keys(s)[0],r=s[r]),e.type=r?.type;for(const[u,c]of Object.entries(r))u!=="type"&&(typeof c=="object"&&c!==null?e[u]={...e[u],...c}:e[u]=c);return o!==""&&l===""&&({dataSeries:e,colorscaleStructure:l}=determineColorScaleStructureSecondHalf(e)),e=applyColorScale(e,o,l),e}function determineColorScaleStructureFirstHalf(e,t,a){let n="";return typeof t=="string"&&(t.toLowerCase().includes("bubble")?(e=prepareBubbleSizes(e),n="bubble"):t.toLowerCase().includes("mesh3d")?n="mesh3d":t.toLowerCase().includes("scatter3d")&&(n="scatter3d")),{dataSeries:e,colorscaleStructure:n}}function determineColorScaleStructureSecondHalf(e,t,a){let n="";return e.mode.includes("markers")||e.mode.includes("markers+lines")||e.mode.includes("lines+markers")?n="marker":e.mode.includes("lines")?n="line":e.type.includes("bar")&&(n="marker"),{dataSeries:e,colorscaleStructure:n}}function applyColorScale(e,t,a){function n(s,r){return s.includes(null)?(console.warn(`Warning: A colorscale based on ${r} was requested. None values were found. They are being replaced with 0 values. It is recommended to provide data without None values.`),s.map(o=>o===null?0:o)):s}return a==="bubble"||a==="scatter3d"?(t!==""&&(e.marker.colorscale=t),e.marker.showscale=!0,e.z?e.marker.color=n(e.z,"z"):e.z_points&&(e.marker.color=n(e.z_points,"z_points"))):a==="mesh3d"?(t!==""&&(e.colorscale=t),e.showscale=!0,e.z?e.intensity=n(e.z,"z"):e.z_points&&(e.intensity=n(e.z_points,"z_points"))):a==="marker"?(e.marker.colorscale=t,e.marker.showscale=!0,e.marker.color=n(e.y,"y")):a==="line"&&(e.line.colorscale=t,e.line.showscale=!0,e.line.color=n(e.y,"y")),e}function prepareBubbleSizes(e){if(e.marker||(e.marker={}),e.bubble_sizes!==void 0)if(typeof e.bubble_sizes=="string"){let n=e.bubble_sizes;e.marker.size=e[n]}else e.marker.size=e.bubble_sizes;else e.z_points?e.marker.size=e.z_points:e.z?e.marker.size=e.z:e.y&&(e.marker.size=e.y);function t(n){const s=Math.max(...n);return s===0?n.map(()=>0):n.map(r=>r/s)}try{e.marker.size=t(e.marker.size)}catch{throw new Error("Error: During bubble plot bubble size normalization, an issue occurred. This usually means the z variable hasn't been populated, such as by equation evaluation set to false or simulation evaluation set to false.")}const a=e.max_bubble_size||50;return e.marker.size=e.marker.size.map(n=>n*a),e.z_points?e.text=e.z_points:e.z&&(e.text=e.z),e}function applyLayoutStyleToPlotlyDict(e,t="default"){let a;if(typeof t=="string"?a=t:a=Object.keys(t)[0],!t||String(t).toLowerCase()==="none")return e;["minimalist","bold"].includes(t.toLowerCase())&&(t="default");const n=layout_styles_library;let s;typeof t=="object"?s=t:s=n[t]||{},Object.keys(s).length===0&&(console.warn(`Style named '${t}' not found with explicit layout dictionary. Using 'default' layout style.`),s=n.default||{}),e.layout=e.layout||{};const r={"title.text":e?.layout?.title?.text||null,"xaxis.title.text":e?.layout?.xaxis?.title?.text||null,"yaxis.title.text":e?.layout?.yaxis?.title?.text||null,"zaxis.title.text":e?.layout?.zaxis?.title?.text||null,"legend.title.text":e?.layout?.legend?.title?.text||null,"annotations.text":e?.layout?.annotations?.map(l=>l.text)||[],"updatemenus.buttons.label":e?.layout?.updatemenus?.flatMap(l=>l.buttons?.map(u=>u.label))||[],"coloraxis.colorbar.title.text":e?.layout?.coloraxis?.colorbar?.title?.text||null},o=structuredClone(s.layout);return r["title.text"]!=null&&(o.title=o.title||{},o.title.text=r["title.text"]),r["xaxis.title.text"]!=null&&(o.xaxis=o.xaxis||{},o.xaxis.title=o.xaxis.title||{},o.xaxis.title.text=r["xaxis.title.text"]),r["yaxis.title.text"]!=null&&(o.yaxis=o.yaxis||{},o.yaxis.title=o.yaxis.title||{},o.yaxis.title.text=r["yaxis.title.text"]),r["zaxis.title.text"]!=null&&(o.zaxis=o.zaxis||{},o.zaxis.title=o.zaxis.title||{},o.zaxis.title.text=r["zaxis.title.text"]),r["legend.title.text"]!=null&&(o.legend=o.legend||{},o.legend.title=o.legend.title||{},o.legend.title.text=r["legend.title.text"]),e.layout=o,e.plot_style=e.plot_style||{},e.plot_style.layout_style=a,e}window.parsePlotStyle=parsePlotStyle;window.applyPlotStyleToPlotlyDict=applyPlotStyleToPlotlyDict;const Plotly$1=await loadLibrary("Plotly","Plotly/plotly-2.14.0.min.js");function copyJson(e){return JSON.parse(JSON.stringify(e))}async function mergeAndplotData(e,t,a,n,s,r){typeof s=="string"&&(r&&typeof r.innerText<"u"&&(r.innerText=`${s}`),s=null),s||(s=new Map,s.innerText="");const{mergedFigDict:o,fileName:l,newestFigDict:u}=await prepareForPlotting(e,t,a,r);if(o){if(plot(o,n),!s.innerText){const c="\u2003\u2003\u2003\u2003\u2003\u2003 Data plotted! Add more data or click 'Clear Data' to start a new graph! \u2003\u2003\u2003\u2003\u2003\u2003";s.innerText+=c}return o}else{console.log("Plotting skipped: incompatible data or merge failure.");return}}async function prepareForPlotting(e,t,a,n){let s=null;try{let r=copyJson(t);if(r=await executeImplicitDataSeriesOperations(r),e)e=copyJson(e),s=await checkAndMergeFigDict(e,r,n);else{const o=getUnitFromLabel(r.layout.xaxis.title.text),l=getUnitFromLabel(r.layout.yaxis.title.text);r.unit={x:o,y:l},s=r}return{mergedFigDict:s,newestFigDict:r,fileName:a}}catch(r){throw console.log("Error from prepareForPlotting: ",r),r}}async function checkAndMergeFigDict(e,t,a){e=copyJson(e),t=copyJson(t);let n=!0;return e.datatype!==t.datatype&&(n=!1,a.innerText+="The added record's datatype is different. Stopping merging. The two values are: "+String(e.datatype)+" "+String(t.datatype)+`
`),removeUnitFromLabel(e.layout.xaxis.title.text)!==removeUnitFromLabel(t.layout.xaxis.title.text)&&(n=!1,a.innerText+="The added record's xaxis label text is different. Stopping merging. The two values are: "+removeUnitFromLabel(e.layout.xaxis.title.text)+" "+removeUnitFromLabel(t.layout.xaxis.title.text)+`
`),removeUnitFromLabel(e.layout.yaxis.title.text)!==removeUnitFromLabel(t.layout.yaxis.title.text)&&(n=!1,a.innerText+="The added record's yaxis label text is different. Stopping merging. The two values are: "+removeUnitFromLabel(e.layout.yaxis.title.text)+" "+removeUnitFromLabel(t.layout.yaxis.title.text)+`
`),n?(t=await convertUnits(t,e),e.data=[...e.data,...t.data],e):(a.innerText+=`Added data not plotted. The records were not compatible for merging. You may continue trying to add data sets, or may click "Clear Data" to start a new graph. These error messages will be automatically cleared after 10 seconds.
`,setTimeout(()=>{a.innerText=""},1e4),null)}async function plot(e,t="graph1"){let a={layout_style:"",trace_styles_collection:""};JSON.stringify(a)===JSON.stringify({layout_style:"",trace_styles_collection:""})&&(a=e.plot_style??{layout_style:"",trace_styles_collection:""});let n=JSON.parse(JSON.stringify(e));n=await executeImplicitDataSeriesOperations(n,!1,!1,!1,!0,!0),a=parsePlotStyle(a),n=applyPlotStyleToPlotlyDict(n,a),n=cleanJsonFigDict(n,["simulate","custom_units_chevrons","equation","trace_style","3d_axes","bubble","superscripts","nested_comments","extraInformation"]),n.layout.scene?(n.layout.scene.yaxis.title.text=replaceSuperscripts$1(n.layout.scene.yaxis.title?.text??""),n.layout.scene.xaxis.title.text=replaceSuperscripts$1(n.layout.scene.xaxis.title?.text??"")):(n.layout.yaxis.title.text=replaceSuperscripts$1(n.layout.yaxis.title?.text??""),n.layout.xaxis.title.text=replaceSuperscripts$1(n.layout.xaxis.title?.text??"")),typeof Plotly$1<"u"?await Plotly$1.newPlot(t,n.data,n.layout):console.error("Plotly is not loaded.")}const csts={R:8.3144598,TC0:273.15,TF0:459.67*5/9,atm:101325,mile:1609.344,bbl:.158987294928,q:16021766208e-29,BTU:1055.05585,APIk:141500,APIq:-131.5,dTnote:{cz:"Viz \xB0C pro d\u016Fle\u017Eitou pozn\xE1mku.",en:"See \xB0C for an important note."},Hgnote:{cz:"Mezi mmHg a Torr je nepatrn\xFD rozd\xEDl.",en:"There is a negligible difference between mmHg and Torr."}},Units=[{v:[1,0,0,0,0,0,0,0],id:"m",name:{cz:"metr",en:"meter",am:"meter"},k:1,SI:!0,basic:!0,prefix:"all"},{v:[0,1,0,0,0,0,0,0],id:"kg",name:{cz:"kilogram",en:"kilogram"},k:1,SI:!0,basic:!0,note:{cz:'To proto\u017Ee kilogram se obt\xED\u017En\u011B programuje, nebo\u0165 samo "kilo" je p\u0159edpona. Proto jsem definoval tak\xE9 gram jako odvozenou jednotku SI, kter\xE1 m\u016F\u017Ee m\xEDt jak\xE9koliv p\u0159edpony.',en:`That's because kilogram is problematic to code, since the "kilo" itself is a prefix. Therefore I have also defined gram as a derived SI unit, which can have all prefixes.`}},{v:[0,0,1,0,0,0,0,0],id:"s",name:{cz:"sekunda",en:"second"},k:1,SI:!0,basic:!0,prefix:"-"},{v:[0,0,0,1,0,0,0,0],id:"A",name:{cz:"amp\xE9r",en:"ampere"},k:1,SI:!0,basic:!0,prefix:"all"},{v:[0,0,0,0,1,0,0,0],id:"K",name:{cz:"kelvin",en:"kelvin"},k:1,SI:!0,basic:!0,prefix:"all"},{v:[0,0,0,0,0,1,0,0],id:"mol",name:{cz:"mol",en:"mole"},k:1,SI:!0,basic:!0,prefix:"all"},{v:[0,0,0,0,0,0,1,0],id:"cd",name:{cz:"kandela",en:"candela"},k:1,SI:!0,basic:!0,prefix:"all"},{v:[0,0,0,0,0,0,0,1],id:"USD",alias:["$","usd"],name:{cz:"americk\xFD dolar",en:"US dollar"},k:1,basic:!0,prefix:"+"},{v:[0,0,0,0,0,0,0,0],id:"%",name:{cz:"procento",en:"percent"},k:.01},{v:[0,0,0,0,0,0,0,0],id:"ppm",name:{cz:"d\xEDl\u016F na jeden milion",en:"parts per million"},k:1e-6},{v:[0,0,0,0,0,0,0,0],id:"ppb",name:{cz:"d\xEDl\u016F na jednu miliardu",en:"parts per billion"},k:1e-9},{v:[0,0,0,0,0,0,0,0],id:"rad",name:{cz:"radi\xE1n",en:"radian"},k:1,SI:!0,prefix:"-",note:{cz:"\xDAhel pova\u017Euji za bezrozm\u011Brn\xE9 \u010D\xEDslo, \u010Dili radi\xE1n je identick\xFD s \u010D\xEDslem 1.",en:"I consider angle units to be dimensionless, with radian being identical to number 1."}},{v:[0,0,0,0,0,0,0,0],id:"\xB0",alias:["deg"],name:{cz:"stupe\u0148",en:"degree"},k:Math.PI/180},{v:[0,0,0,0,0,0,0,0],id:"gon",name:{cz:"gradi\xE1n",en:"gradian"},k:Math.PI/200},{v:[0,0,-1,0,0,0,0,0],id:"Hz",name:{cz:"hertz",en:"hertz"},k:1,SI:!0,prefix:"all"},{v:[1,1,-2,0,0,0,0,0],id:"N",name:{cz:"newton",en:"newton"},k:1,SI:!0,prefix:"all"},{v:[-1,1,-2,0,0,0,0,0],id:"Pa",name:{cz:"pascal",en:"pascal"},k:1,SI:!0,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"J",name:{cz:"joule",en:"joule"},k:1,SI:!0,prefix:"all"},{v:[2,1,-3,0,0,0,0,0],id:"W",name:{cz:"watt",en:"watt"},k:1,SI:!0,prefix:"all"},{v:[0,0,1,1,0,0,0,0],id:"C",name:{cz:"coulomb",en:"coulomb"},k:1,SI:!0,prefix:"all"},{v:[2,1,-3,-1,0,0,0,0],id:"V",name:{cz:"volt",en:"volt"},k:1,SI:!0,prefix:"all"},{v:[-2,-1,4,2,0,0,0,0],id:"F",name:{cz:"farad",en:"farad"},k:1,SI:!0,prefix:"all"},{v:[2,1,-3,-2,0,0,0,0],id:"ohm",name:{cz:"ohm",en:"ohm"},k:1,SI:!0,prefix:"all"},{v:[-2,-1,3,2,0,0,0,0],id:"S",name:{cz:"siemens",en:"siemens"},k:1,SI:!0,prefix:"all"},{v:[2,1,-2,-1,0,0,0,0],id:"Wb",name:{cz:"weber",en:"weber"},k:1,SI:!0,prefix:"all"},{v:[0,1,-2,-1,0,0,0,0],id:"T",name:{cz:"tesla",en:"tesla"},k:1,SI:!0,prefix:"all"},{v:[2,1,-2,-2,0,0,0,0],id:"H",name:{cz:"henry",en:"henry"},k:1,SI:!0,prefix:"all"},{v:[0,0,0,0,1,0,0,0],id:"\xB0C",name:{cz:"stupe\u0148 Celsia",en:"degree Celsius"},k:1,SI:!0,note:{cz:"\xB0C je pova\u017Eov\xE1n za jednotku rozd\xEDlu teploty (\u0394T). Absolutn\xED teplota (T) je zaps\xE1na pomoc\xED slo\u017Een\xFDch z\xE1vorek, nap\u0159. {10\xB0C}, viz tutori\xE1l",en:"\xB0C is considered to be a unit of temperature difference (\u0394T). Absolute temperature (T) is written using curly braces, e.g. {10\xB0C}, see tutorial"}},{v:[0,0,0,0,0,0,1,0],id:"lm",name:{cz:"lumen",en:"lumen"},k:1,SI:!0,prefix:"all"},{v:[-2,0,0,0,0,0,1,0],id:"lx",name:{cz:"lux",en:"lux"},k:1,SI:!0,prefix:"all"},{v:[0,0,-1,0,0,0,0,0],id:"Bq",name:{cz:"becquerel",en:"becquerel"},k:1,SI:!0,prefix:"all"},{v:[0,0,-1,0,0,0,0,0],id:"Rd",name:{cz:"rutherford",en:"rutherford"},k:1e6,SI:!0,prefix:"all"},{v:[2,0,-2,0,0,0,0,0],id:"Gy",name:{cz:"gray",en:"gray"},k:1,SI:!0,prefix:"all"},{v:[2,0,-2,0,0,0,0,0],id:"Sv",name:{cz:"sievert",en:"sievert"},k:1,SI:!0,prefix:"all"},{v:[-1,0,0,0,0,0,0,0],id:"dpt",name:{cz:"dioptrie",en:"dioptre"},k:1,SI:!0},{v:[0,0,0,0,0,1,0,0],id:"Nm3",alias:["Ncm"],name:{cz:"norm\xE1ln\xED krychlov\xFD metr",en:"normal cubic metre"},k:csts.atm/csts.TC0/csts.R,note:{cz:"Definov\xE1n p\u0159i 0\xB0C a 1 atm. Navzdory n\xE1zvu je Nm3 jednotkou l\xE1tkov\xE9ho mno\u017Estv\xED, nikoliv objemu.",en:"Defined at 0\xB0C and 1 atm. Despite the name, Nm3 is actually amount of substance, not volume."}},{v:[0,0,0,0,0,1,0,0],id:"Ndm3",alias:["Nl"],name:{cz:"norm\xE1ln\xED litr",en:"normal litre"},k:csts.atm/csts.TC0/csts.R/1e3,note:{cz:"Viz Nm3 pro vysv\u011Btlen\xED.",en:"See Nm3 for explanation."}},{v:[0,0,0,0,0,1,0,0],id:"SCF",name:{cz:"norm\xE1ln\xED krychlov\xE1 stopa",en:"standard cubic foot"},k:.028317*csts.atm/288.7/csts.R,note:{cz:"Viz Nm3 pro vysv\u011Btlen\xED.",en:"See Nm3 for explanation."}},{v:[0,0,1,0,0,0,0,0],id:"min",name:{cz:"minuta",en:"minute"},k:60},{v:[0,0,1,0,0,0,0,0],id:"h",name:{cz:"hodina",en:"hour"},k:3600},{v:[0,0,1,0,0,0,0,0],id:"d",alias:["day"],name:{cz:"den",en:"day"},k:3600*24},{v:[0,0,1,0,0,0,0,0],id:"week",name:{cz:"t\xFDden",en:"week"},k:3600*24*7},{v:[0,0,1,0,0,0,0,0],id:"ftn",name:{cz:"dva t\xFDdny",en:"fortnight"},k:1209600,prefix:"all"},{v:[0,0,1,0,0,0,0,0],id:"month",alias:["mth","m\u011Bs"],name:{cz:"pr\u016Fm\u011Brn\xFD m\u011Bs\xEDc",en:"average month"},k:3600*24*30.436875,note:{cz:"Vypo\u010Dten z gregori\xE1nsk\xE9ho roku.",en:"Calculated from gregorian year."}},{v:[0,0,1,0,0,0,0,0],id:"yr",alias:["year"],name:{cz:"gregori\xE1nsk\xFD rok",en:"gregorian year"},k:3600*24*365.2425,note:{cz:"Pokud si nejste jisti, kter\xFD rok pou\u017E\xEDt, zvolte tento. Juli\xE1nsk\xFD rok je zastaral\xFD.",en:"If you are unsure which year to use, pick this one. Julian year is obsolete."}},{v:[0,0,1,0,0,0,0,0],id:"jyr",name:{cz:"juli\xE1nsk\xFD rok",en:"julian year"},k:3600*24*365.25},{v:[0,0,-1,0,0,0,0,0],id:"rpm",name:{cz:"ot\xE1\u010Dky za minutu",en:"revolutions per minute"},k:1/60},{v:[0,0,0,0,1,0,0,0],id:"\xB0F",name:{cz:"stupe\u0148 Fahrenheita",en:"degree Fahrenheit"},k:5/9,note:csts.dTnote},{v:[0,0,0,0,1,0,0,0],id:"\xB0Re",alias:["\xB0R\xE9","\xB0r"],name:{cz:"stupe\u0148 R\xE9aumura",en:"degree R\xE9aumur"},k:1.25,note:csts.dTnote},{v:[0,0,0,0,1,0,0,0],id:"\xB0R",name:{cz:"Rankine",en:"Rankine"},k:5/9,note:csts.dTnote},{v:[1,0,0,0,0,0,0,0],id:"\xC5",name:{cz:"angstrom",en:"angstrom"},k:1e-10,SI:!0},{v:[1,0,0,0,0,0,0,0],id:"th",name:{cz:"thou",en:"thou"},k:254e-7},{v:[1,0,0,0,0,0,0,0],id:"in",name:{cz:"palec",en:"inch"},k:.0254},{v:[1,0,0,0,0,0,0,0],id:"ft",name:{cz:"stopa",en:"foot"},k:.3048,prefix:"+"},{v:[1,0,0,0,0,0,0,0],id:"yd",name:{cz:"yard",en:"yard"},k:.9144},{v:[1,0,0,0,0,0,0,0],id:"fur",name:{cz:"furlong",en:"furlong"},k:201.168,prefix:"all"},{v:[1,0,0,0,0,0,0,0],id:"mi",name:{cz:"m\xEDle",en:"mile"},k:csts.mile},{v:[1,0,0,0,0,0,0,0],id:"nmi",name:{cz:"n\xE1mo\u0159n\xED m\xEDle",en:"nautical mile"},k:1852},{v:[1,0,0,0,0,0,0,0],id:"au",name:{cz:"astronomick\xE1 jednotka",en:"astronomical unit"},k:149597870700,prefix:"+"},{v:[1,0,0,0,0,0,0,0],id:"pc",name:{cz:"parsek",en:"parsec"},k:0x6da012f95c9ea4,prefix:"+"},{v:[1,0,0,0,0,0,0,0],id:"ly",name:{cz:"sv\u011Bteln\xFD rok",en:"light-year"},k:9460730472580800,prefix:"+"},{v:[2,0,0,0,0,0,0,0],id:"a",name:{cz:"ar",en:"ar"},k:100,SI:!0,prefix:"+"},{v:[2,0,0,0,0,0,0,0],id:"ac",name:{cz:"akr",en:"acre"},k:4046.872},{v:[2,0,0,0,0,0,0,0],id:"darcy",name:{cz:"darcy",en:"darcy"},k:9869233e-19},{v:[3,0,0,0,0,0,0,0],id:"l",name:{cz:"litr",en:"litre"},k:.001,SI:!0,prefix:"all"},{v:[3,0,0,0,0,0,0,0],id:"pt",name:{cz:"pinta",en:"pint"},k:568261e-9},{v:[3,0,0,0,0,0,0,0],id:"gal",name:{cz:"americk\xFD galon",en:"US gallon"},k:.003785412},{v:[3,0,0,0,0,0,0,0],id:"bsh",name:{cz:"americk\xFD bu\u0161l",en:"US bushel"},k:.0352391},{v:[3,0,0,0,0,0,0,0],id:"ccm",name:{cz:"kubick\xFD centimetr",en:"cubic centimetre"},k:1e-6},{v:[3,0,0,0,0,0,0,0],id:"bbl",name:{cz:"barel ropy",en:"oil barrel"},k:csts.bbl,prefix:"+"},{v:[3,0,-1,0,0,0,0,0],id:"BPD",name:{cz:"barel ropy za den",en:"oil barrel per day"},k:csts.bbl/3600/24,prefix:"+"},{v:[0,1,0,0,0,0,0,0],id:"g",name:{cz:"gram",en:"gram"},k:.001,SI:!0,prefix:"all"},{v:[0,1,0,0,0,0,0,0],id:"t",name:{cz:"tuna",en:"tonne"},k:1e3,SI:!0,prefix:"+"},{v:[0,1,0,0,0,0,0,0],id:"gr",name:{cz:"grain",en:"grain"},k:6479891e-11},{v:[0,1,0,0,0,0,0,0],id:"oz",name:{cz:"once",en:"ounce"},k:.028349523},{v:[0,1,0,0,0,0,0,0],id:"ozt",name:{cz:"trojsk\xE1 unce",en:"troy ounce"},k:.0311034768},{v:[0,1,0,0,0,0,0,0],id:"ct",name:{cz:"kar\xE1t",en:"carat"},k:2e-4},{v:[0,1,0,0,0,0,0,0],id:"lb",alias:["lbs"],name:{cz:"libra",en:"pound"},k:.45359237},{v:[0,1,0,0,0,0,0,0],id:"st",name:{cz:"k\xE1men",en:"stone"},k:6.35029318},{v:[0,1,0,0,0,0,0,0],id:"slug",name:{cz:"slug",en:"slug"},k:14.593903},{v:[0,1,0,0,0,0,0,0],id:"fir",name:{cz:"firkin",en:"firkin"},k:40.8233133,prefix:"all"},{v:[0,1,0,0,0,0,0,0],id:"ts",name:{cz:"kr\xE1tk\xE1 tuna",en:"short ton"},k:907.18474},{v:[0,1,0,0,0,0,0,0],id:"tl",name:{cz:"imperi\xE1ln\xED tuna",en:"long ton"},k:1016},{v:[0,1,0,0,0,0,0,0],id:"u",alias:["Da"],name:{cz:"dalton (atomov\xE1 hmotnostn\xED konstanta)",en:"dalton (unified atomic mass unit)"},k:166053904e-35},{v:[1,0,-1,0,0,0,0,0],id:"mph",name:{cz:"m\xEDle za hodinu",en:"mile per hour"},k:csts.mile/3600},{v:[1,0,-1,0,0,0,0,0],id:"kn",name:{cz:"uzel",en:"knot"},k:1852/3600},{v:[1,1,-2,0,0,0,0,0],id:"dyn",name:{cz:"dyn",en:"dyne"},k:1e-5,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"Wh",name:{cz:"watthodina",en:"watt-hour"},k:3600,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"eV",name:{cz:"elektronvolt",en:"electronvolt"},k:csts.q,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"erg",name:{cz:"erg",en:"erg"},k:1e-7,SI:!0,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"Btu",alias:["BTU","btu"],name:{cz:"britsk\xE1 tepeln\xE1 jednotka",en:"british thermal unit"},k:csts.BTU,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"Chu",alias:["CHU","chu"],name:{cz:"celsiova jednotka tepla",en:"celsius heat unit"},k:1899.101,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"thm",name:{cz:"therm",en:"therm"},k:csts.BTU*1e5,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"cal",name:{cz:"kalorie",en:"calorie"},k:4.184,prefix:"all"},{v:[2,1,-2,0,0,0,0,0],id:"TNT",name:{cz:"ekvivalent tuny TNT",en:"ton of TNT equivalent"},k:4184e6,prefix:"+"},{v:[2,1,-2,0,0,0,0,0],id:"BOE",alias:["BFOE"],name:{cz:"ekvivalent barelu ropy",en:"barrel of oil equivalent"},k:58e5*csts.BTU,prefix:"+"},{v:[2,1,-2,0,0,0,0,0],id:"GGE",name:{cz:"ekvivalent galonu benz\xEDnu",en:"gasoline gallon equivalent"},k:114e3*csts.BTU,prefix:"+"},{v:[-1,0,0,1,0,0,0,0],id:"Oe",name:{cz:"oersted",en:"oersted"},k:1e3/(4*Math.PI),prefix:"all"},{v:[2,1,-3,0,0,0,0,0],id:"hp",name:{cz:"imperi\xE1ln\xED ko\u0148sk\xE1 s\xEDla",en:"imperial horsepower"},k:745.6998715822702},{v:[-1,1,-1,0,0,0,0,0],id:"P",name:{cz:"poise",en:"poise"},k:.1,SI:!0,prefix:"all"},{v:[2,0,-1,0,0,0,0,0],id:"St",name:{cz:"stokes",en:"stokes"},k:1e-4,SI:!0,prefix:"all"},{v:[-1,1,-2,0,0,0,0,0],id:"bar",name:{cz:"bar",en:"bar"},k:1e5,SI:!0,prefix:"all"},{v:[-1,1,-2,0,0,0,0,0],id:"atm",name:{cz:"atmosf\xE9ra",en:"atmosphere"},k:csts.atm,note:{cz:"Tak\xE9 slou\u017E\xED jako standardn\xED tlak.",en:"Also serves as standard pressure."}},{v:[-1,1,-2,0,0,0,0,0],id:"mmHg",name:{cz:"milimetr rtu\u0165ov\xE9ho sloupce",en:"milimetre of mercury"},k:133.322387415,note:csts.Hgnote},{v:[-1,1,-2,0,0,0,0,0],id:"Torr",alias:["torr"],name:{cz:"torr",en:"torr"},k:csts.atm/760,prefix:"all",note:csts.Hgnote},{v:[-1,1,-2,0,0,0,0,0],id:"psi",name:{cz:"libra na \u010Dtvere\u010Dn\xED palec",en:"pound per square inch"},k:6894.757293168362,prefix:"all"},{v:[0,1,-2,-1,0,0,0,0],id:"G",name:{cz:"gauss",en:"gauss"},k:1e-4,SI:!0,prefix:"all"},{v:[0,0,-1,0,0,0,0,0],id:"Ci",name:{cz:"Curie",en:"Curie"},k:37e9,SI:!1,prefix:"all"},{v:[0,-1,1,1,0,0,0,0],id:"R",name:{cz:"Rentgen",en:"Roentgen"},k:258e-6,SI:!1,prefix:"all"},{v:[0,0,0,0,0,0,0,0],id:"monolayer",alias:["monolayers"],name:{cz:"monolayer",en:"monolayer"},k:1},{v:[1,0,-2,0,0,0,0,0],id:"_g",name:{cz:"norm\xE1ln\xED t\xEDhov\xE9 zrychlen\xED",en:"standard gravity"},k:9.80665,constant:!0,note:{cz:"Nikoliv univerz\xE1ln\xED konstanta, n\xFDbr\u017E konven\u010Dn\xED.",en:"Not a universal constant, but a conventional one."}},{v:[1,0,-1,0,0,0,0,0],id:"_c",name:{cz:"rychlost sv\u011Btla ve vakuu",en:"speed of light in vacuum"},k:299792458,constant:!0},{v:[3,-1,-2,0,0,0,0,0],id:"_G",name:{cz:"gravita\u010Dn\xED konstanta",en:"gravitational constant"},k:667408e-16,constant:!0},{v:[2,1,-1,0,0,0,0,0],id:"_h",name:{cz:"Planckova konstanta",en:"Planck constant"},k:662607004e-42,constant:!0},{v:[2,1,-2,0,-1,0,0,0],id:"_k",name:{cz:"Boltzmannova konstanta",en:"Boltzmann constant"},k:138064852e-31,constant:!0},{v:[2,1,-2,0,-1,-1,0,0],id:"_R",name:{cz:"plynov\xE1 konstanta",en:"gas constant"},k:csts.R,constant:!0},{v:[1,1,-2,-2,0,0,0,0],id:"_mu",alias:["\u03BC"],name:{cz:"permeabilita vakua",en:"vacuum permeability"},k:12566370614e-16,constant:!0},{v:[-3,-1,4,2,0,0,0,0],id:"_E",name:{cz:"permitivita vakua",en:"vacuum permittivity"},k:8854187817e-21,constant:!0},{v:[0,0,1,1,0,0,0,0],id:"_q",name:{cz:"element\xE1rn\xED n\xE1boj",en:"elementary charge"},k:csts.q,constant:!0},{v:[0,0,0,0,0,-1,0,0],id:"_NA",name:{cz:"Avogadrova konstanta",en:"Avogadro constant"},k:602214085e15,constant:!0},{v:[0,0,0,0,0,0,0,0],id:"_pi",alias:["\u03C0"],name:{cz:"Ludolfovo \u010D\xEDslo",en:"Archimedes' constant"},k:Math.PI,constant:!0},{v:[0,0,0,0,0,0,0,0],id:"_e",name:{cz:"Eulerovo \u010D\xEDslo",en:"Euler's number"},k:Math.E,constant:!0},{v:[3,-1,0,0,0,0,0,0],id:"API",alias:["\xB0API"],name:{cz:"API hustota",en:"API density"},k:1/141500,onlyUnitfuns:!0},{v:[0,0,0,0,0,0,0,0],id:"ln",alias:["log"],name:{cz:"P\u0159irozen\xFD logaritmus",en:"Natural logarithm"},k:NaN,onlyUnitfuns:!0}],Prefixes=[{id:"a",v:-18},{id:"f",v:-15},{id:"p",v:-12},{id:"n",v:-9},{id:"u",v:-6},{id:"\u03BC",v:-6},{id:"m",v:-3},{id:"c",v:-2},{id:"d",v:-1},{id:"h",v:2},{id:"k",v:3},{id:"M",v:6},{id:"G",v:9},{id:"T",v:12},{id:"P",v:15}];function Convert_parse(e,t){const a=Units.map(m=>({id:m.id,ref:m}));Units.forEach(m=>m.alias&&m.alias.forEach(h=>a.push({id:h,ref:m})));const n=a.map(m=>m.id),s=a.map(m=>m.id.toLowerCase()),r=Prefixes.map(m=>m.id);return t=o(t),l(t);function o(m){m===""&&(m="1"),m=m.replace("\xB7","*").replace(/,/g,".");const h=E=>m.split(E).length-1,y=h("("),g=h(")"),b=h("{"),x=h("}");if(g>y)throw e.msgDB.ERR_brackets_missing(g-y);if(x!==b)throw e.msgDB.ERR_cbrackets_missing;m+=")".repeat(y-g),m=m.replace(/([(){}])/g," $1 ").trim().replace(/ +/g," ").replace(/ ?([\^*/+\-]+) ?/g,"$1").replace(/([({]+) ?/g,"$1").replace(/ ?([)}]+)/g,"$1").replace(/ /g,"*");const w=m.match(/[\^*/+\-]{2,}/);if(w)throw e.msgDB.ERR_operators(w[0]);if(m.search(/[#~]/)>-1)throw e.msgDB.ERR_special_chars;return m}function l(m){let h=[],y=0,g=0,b=0,x=!1;for(y=0;y<m.length;y++)if(m[y]==="("||m[y]==="{")b++,b===1&&(y>g&&(h=h.concat(u(m.slice(g,y),x))),g=y,x=!1);else if((m[y]===")"||m[y]==="}")&&(b--,b===0)){if(y-g-1===0)throw e.msgDB.ERR_brackets_empty;if(m[y]===")"&&m[g]==="{"||m[y]==="}"&&m[g]==="(")throw e.msgDB.ERR_brackets_mismatch(m[g],m[y]);const w=l(m.slice(g+1,y));m[y]==="}"&&w.unshift("{}"),h.push(w),g=y+1,x=!0}return y>g&&(h=h.concat(u(m.slice(g,y),x))),h}function u(m,h){const y=c(m,h).split(/([\^*/+\-])/).filter(b=>b.length>0).map(b=>d(b)),g=[];return y.forEach(function(b){let x=Number(b);if(!isNaN(x)&&isFinite(x)){g.push(x);return}if(b.match(/^[\^*/+\-]$/)){g.push(b);return}else{let w=b.match(/^[+\-]?[\d\.]+(?:e[+\-]?\d+)?/);if(w){if(w=w[0],b=b.slice(w.length),x=Number(w),isNaN(x)||!isFinite(x))throw e.msgDB.ERR_NaN(w);g.push(Number(x)),g.push("*")}g.push(f(b))}}),g}function c(m,h){let y=m.match(/^[+\-]?[\d\.]+(?:e[+\-]?\d+)?/);y&&!h&&(y=y[0],m=m.replace(y,y.replace(/\-/g,"~").replace(/\+/g,"#")));const g=m.match(/[\d\.]+(?:e[+\-]?\d+)?/g);return g&&g.forEach(b=>m=m.replace(b,b.replace(/\-/g,"~").replace(/\+/g,"#"))),m}function d(m){return m.replace(/\~/g,"-").replace(/\#/g,"+")}function f(m){let h=1,y=null;if(y=p(m,h),y)return y;const g=m.search(/[\.\d]+$/);if(g>-1){if(h=Number(m.slice(g)),isNaN(h)||!isFinite(h))throw e.msgDB.ERR_unitPower(m);m=m.slice(0,g)}if(y=p(m,h),y||(y=p(m,h,!0)),!y)throw e.msgDB.ERR_unknownUnit(m);return y}function p(m,h,y){let g=y?m.toLowerCase():m,b=y?s:n,x=b.indexOf(g),w=-1;return x===-1?(x=b.indexOf(g.slice(1)),w=r.indexOf(m[0]),x===-1||w===-1?null:(e.checkPrefix(Prefixes[w],a[x].ref),new e.Unit(Prefixes[w],a[x].ref,h))):new e.Unit(1,a[x].ref,h)}}function Convert_macro(code){const that=this;this.clearStatus();try{let cleanupCb=function(e){e=e.trim();const t=e.search("//");return e.search("<js>")!==0&&t>-1&&(e=e.slice(0,t)),e},expand=function(e){if(!!e)return Object.keys(variables).sort(sortCb).forEach(function(t){const a=new RegExp(t.replace("$","\\$"),"g");if(e.search(a)===-1)return;const n=`(${variables[t].n}*${that.vector2text(variables[t].v,!0)})`.replace(/\*\)$/,")");e=e.replace(a,n)}),e};const sortCb=(e,t)=>t.length-e.length,checkVarName=e=>e.search(/^[A-z_$][A-z_0-9$]*$/)>-1;code=code.replace(/\/\*[^/*]*\*\//g,""),code=code.split(/(<js>[^]*?)<\/js>/);let arr=[];for(let e of code)e.search("<js>")===0?arr.push(e):arr=arr.concat(e.split(/\r\n|\r|\n/));code=arr.map(cleanupCb).filter(e=>e.length>0);const functions={write:{argsMin:1,f:function(){for(let e=0;e<arguments.length;e++)that.messages.push(arguments[e])}},convert:{argsMin:1,argsMax:3,f:function(e,t,a){const n=that.messages;e=expand(e),t=expand(t);let s=that.convert(e,t);a&&(a=JSON.parse(a),s=that.format(s,a)),n.length===0&&(n[0]=""),n[n.length-1]+=(s.num2||s.num)+" "+s.dim}}},variables={};for(let i=0;i<code.length;i++){let line=code[i];if(line.search("<js>")===0){eval(line.replace("<js>",""));continue}const eqs=line.split("=").map(e=>e.trim());if(eqs.length-1>=2)throw that.msgDB.ERRC_equalSigns(line);if(eqs.length-1===1){const e=eqs[0];if(!checkVarName(e))throw that.msgDB.ERRC_varName(line,e);const t=expand(eqs[1]);let a=Convert_parse(that,t);a=this.rationalizeField(a),a=this.reduceField(a),variables[e]=a}else{let e=!1;for(let t of Object.keys(functions)){const a=new RegExp("^"+t.replace("$","\\$")+"\\(([^)]*)\\)"),n=line.match(a);if(!n)continue;e=!0;const s=functions[t],r=n[1].split(";").filter(l=>l.length>0);if(s.hasOwnProperty("argsMin")&&r.length<s.argsMin||s.hasOwnProperty("argsMax")&&r.length>s.argsMax)throw that.msgDB.ERRC_argCount(line,t,s.argsMin||0,s.argsMax||"n",r.length);s.f.apply(null,r);break}if(!e)throw that.msgDB.ERRC_unreadableLine(line)}}}catch(e){this.status=2,this.messages.push(e)}this.status<2&&this.messages.push("Macro successfully finished");const msgs=this.messages;return this.clearStatus(),msgs}function Convert(){const e={};["ERR_brackets_missing","ERR_operators","ERR_brackets_empty","ERR_NaN","ERR_unitPower","ERR_unknownUnit","ERR_operator_misplaced","ERR_power_dim","ERR_dim_mismatch","ERR_special_chars","ERR_cbrackets_missing","ERR_brackets_mismatch","ERR_cbrackets_illegal","ERR_unknown_unitfun","ERR_cbrackets_dim_mismatch","ERR_NaN_result","WARN_prefixes","WARN_prefixes_word0","WARN_prefixes_word+","WARN_prefixes_word-","WARN_target_dim_mismatch","WARN_targetNumber","WARN_separators","WARN_curly_prefix","WARN_format_params","ERRC_equalSigns","ERRC_varName","ERRC_argCount","ERRC_unreadableLine","ERR_custom_units_mismatch"].forEach(r=>e[r]=null),this.msgDB=e,this.clearStatus=function(){this.status=0,this.messages=[]},this.clearStatus(),this.warn=function(r){this.status=this.status<1?1:this.status,this.messages.push(r)};const t=.001;function a(r,o){this.n=typeof r=="number"?r:1,this.v=o||new Array(8).fill(0)}this.Q=a;function n(r,o,l){this.pref=r,this.unit=o,this.power=l}this.Unit=n,this.parseCustomUnits=function(r){let o="";const u=/<(.+?)>/g.exec(r);return u&&(o=u[1]),o},this.convert=function(r,o){typeof o!="string"&&(o="");let l="",u="",c=r,d=o;if(l=this.parseCustomUnits(r),l&&(c=c.replace(/<(.+?)>/g,"")),u=this.parseCustomUnits(o),u&&(d=d.replace(/<(.+?)>/g,"")),l!==u)throw l="",u="",this.msgDB.ERR_custom_units_mismatch;r=this.beautify(c),o=this.beautify(d);const f=d.length>0;let p,m;p=Convert_parse(this,c),m=Convert_parse(this,d);const h=f&&Array.isArray(m[0])&&m[0][0]==="{}";if(p=this.rationalizeField(p,!0),p=this.reduceField(p),h)return this.processTargetCurly(p,m);this.checkTargetNumbers(m),m=this.rationalizeField(m),m=this.reduceField(m);const y=p.n/m.n;if(isNaN(y))throw this.msgDB.ERR_NaN_result;let g=f?d:this.vector2text(p.v,!0);const b=!f||this.checkDimension(p.v,m.v);b!==!0&&(g+="*"+this.vector2text(b,!0));let x;return l?x=l+"*"+g:x=g,{num:y,dim:x}},this.fullConversion=function(r,o){const l={};return l.output=this.convert(r,o),this.status===0&&(this.messages=["OK"]),l.status=this.status,l.messages=this.messages,this.clearStatus(),l},this.runCode=Convert_macro,this.rationalizeField=function(r,o){const l=this;return u(r);function u(c){if(c[0]==="{}"){const[d,f]=l.processCurly(c,o),p=f.f(d);return c=[new a(p,f.v)]}for(let d=0;d<c.length;d++){const f=c[d];if(typeof f=="number")c[d]=new a(f);else if(f instanceof l.Unit){const p=typeof f.pref=="object"?10**f.pref.v:1,m=new a(p*f.unit.k,f.unit.v);c[d]=l.power(m,new a(f.power))}else Array.isArray(f)&&(c[d]=u(f))}return c}},this.reduceField=function(r){const o=this;return l(r);function l(c){if(!(c[0]instanceof a)&&!Array.isArray(c[0]))throw o.msgDB.ERR_operator_misplaced(c[0]);let d,f;for(d=0;d<c.length;d++)Array.isArray(c[d])&&(c[d]=l(c[d]));if(c=u(c,["^"],(p,m,h)=>o.power(p,h)),c=u(c,["*","/"],(p,m,h)=>m==="*"?o.multiply(p,h):o.divide(p,h)),!(c[0]instanceof a))throw o.msgDB.ERR_operator_misplaced(c[0]);for(f=c[0],d=0;d<c.length;d+=2)if(c.hasOwnProperty(d+1))if(c[d+1]==="+"&&c[d+2]instanceof a)f=o.add(f,c[d+2]);else if(c[d+1]==="-"&&c[d+2]instanceof a)f=o.subtract(f,c[d+2]);else throw o.msgDB.ERR_operator_misplaced(c[d+1]);return f}function u(c,d,f){let p,m=null,h=[];for(p=0;p<c.length&&c.hasOwnProperty(p+1);p+=2)if(d.indexOf(c[p+1])>-1){if(m||(m=c[p]),!(c[p+2]instanceof a))throw o.msgDB.ERR_operator_misplaced(c[p+1]);m=f(m,c[p+1],c[p+2])}else m?(h.push(m),h.push(c[p+1]),m=null):(h.push(c[p]),h.push(c[p+1]));return m?h.push(m):h.push(c[p]),h}},this.processCurly=function(r,o){const l=this.msgDB.ERR_cbrackets_illegal,u=r.filter(h=>h instanceof this.Unit),c=r.filter(h=>typeof h=="number"),d=r.filter(h=>Array.isArray(h)),f=Unitfuns.map(h=>h.id);if(!o||u.length!==1||u[0].power!==1||d.length>1)throw l;if(["+","-","/","^"].forEach(h=>{if(r.indexOf(h)>-1)throw l}),d.length>0){const h=this.reduceField(this.rationalizeField(d[0]));if(!s(h.v))throw this.msgDB.ERR_cbrackets_dim_mismatch(u[0].unit.id);c.push(h.n)}if(c.length>1)throw l;const p=c.length===1?c[0]:0,m=f.indexOf(u[0].unit.id);if(m===-1)throw this.msgDB.ERR_unknown_unitfun(u[0].unit.id);return u[0].pref!==1&&this.warn(this.msgDB.WARN_curly_prefix),[p,Unitfuns[m]]},this.processTargetCurly=function(r,o){const[l,u]=this.processCurly(o[0],!0);if(l!==0)throw this.msgDB.ERR_cbrackets_illegal;if(!s(this.divide(new a(1,u.v),new a(1,r.v)).v))throw this.msgDB.ERR_cbrackets_dim_mismatch(u.id);return{num:u.fi(r.n),dim:u.id}},this.power=function(r,o){if(!s(o.v))throw this.msgDB.ERR_power_dim;return new a(r.n**o.n,r.v.map(l=>l*o.n))},this.multiply=(r,o)=>new a(r.n*o.n,r.v.map((l,u)=>l+o.v[u])),this.divide=(r,o)=>this.multiply(r,this.power(o,new a(-1))),this.add=function(r,o){if(!s(r.v.map((l,u)=>l-o.v[u])))throw this.msgDB.ERR_dim_mismatch;return new a(r.n+o.n,r.v)},this.subtract=(r,o)=>this.add(r,this.multiply(o,new a(-1))),this.checkPrefix=function(r,o){let l=!1;(!o.prefix||o.prefix==="0")&&(l=this.msgDB.WARN_prefixes_word0),o.prefix==="+"&&r.v<0&&(l=this.msgDB["WARN_prefixes_word+"]),o.prefix==="-"&&r.v>0&&(l=this.msgDB["WARN_prefixes_word-"]),l!==!1&&this.warn(this.msgDB.WARN_prefixes(o,l,r))},this.checkDimension=function(r,o){let l=!0;const u=new Array(8).fill(0),c=Units.filter(f=>f.basic),d=[];for(let f=0;f<u.length;f++)Math.abs(r[f]-o[f])>t&&(u[f]=r[f]-o[f],d.push(c.find(p=>p.v[f]===1).id),l=!1);return d.length>0&&this.warn(this.msgDB.WARN_target_dim_mismatch(d)),l||u},this.checkTargetNumbers=function(r){if(!(r.length<=1)){for(let o of r)if(typeof o=="number"&&o!==1){this.warn(this.msgDB.WARN_targetNumber);return}}},this.vector2text=function(r,o){let l="";const u=Units.filter(c=>c.basic);for(let c=0;c<r.length;c++)r[c]!==0&&(l+=u.find(d=>d.v[c]===1).id,o?(r[c]>0&&r[c]!==1&&(l+="^"+r[c]),r[c]<0&&(l+="^("+r[c]+")")):r[c]!==1&&(l+=r[c]),l+="*");return l.replace(/\*$/,"")};const s=r=>r.reduce((o,l)=>o&&Math.abs(l)<t,!0);this.format=function(r,o){if(!r)return;r.dim.search(/^\d/)>-1&&(r.dim=" * "+r.dim);let l=o.digits,u=o.fixed,c=r.num;if(o.exp){let d;o.spec==="fixed"&&(d=u||0),o.spec==="digits"&&(d=l-1),r.num2=c.toExponential(d)}else if(o.spec==="fixed")r.num2=c.toFixed(u||0);else if(o.spec==="digits"){let d=Math.floor(Math.log10(c))+1;r.num2=d>l?(Math.round(c/10**(d-l))*10**(d-l)).toFixed(0):c.toPrecision(l)}else r.num2=String(c);return r},this.beautify=function(r){r=r.trim();const o=r.split("(").length-1,l=r.split(")").length-1;return o>l?r+")".repeat(o-l):r},this.parseQ=function(r){try{let o,l=Convert_parse(this,r);return l.length===1&&l[0]instanceof this.Unit&&(o=l[0].unit.id),l=this.rationalizeField(l,!0),l=this.reduceField(l),o&&(l.id=o),l}catch{return!1}}}const Plotly=await loadLibrary("Plotly","Plotly/plotly-2.14.0.min.js");let globalFigDict=null,url=window.location.href,params=new URLSearchParams(new URL(url).search),urlParamsString=params.get("fromUrl");const errorDiv$1=document.getElementById("errorDiv");document.getElementById("messagesToUserDiv");const convert$1=new Convert;window.convert=convert$1;function safeSetElementValue(e,t,a){const n=e.getElementById(t);n&&(n.value=a)}function safeSetElementInnerHTML(e,t,a){const n=e.getElementById(t);n&&(n.innerHTML=a)}function clearData(e,t=document){globalFigDict=null,urlParamsString=null,safeSetElementInnerHTML(t,"errorDiv",""),safeSetElementInnerHTML(t,"messagesToUserDiv",""),safeSetElementInnerHTML(t,"downloadButtonsContainer",""),safeSetElementValue(t,"file-selector",""),safeSetElementValue(t,"load-from-url","");const a=t.getElementById("download");a&&(a.style.display="none");const n=t.getElementById("toggleSection1");n&&(n.style.display="block");const s=t.getElementById("toggleSection2");s&&(s.style.display="block");const r=t.getElementById("toReveal");r&&(r.style.display="none"),Plotly.purge(e)}function createCopyURLButton(e){const t=createCopyUrlLink(e),a=document.createElement("button");a.innerText="Copy URL";function n(s){const r=document.createElement("textarea");r.value=s,document.body.appendChild(r),r.select(),document.execCommand("copy"),document.body.removeChild(r)}return a.addEventListener("click",()=>{navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(t).then(()=>{alert(`URL copied to clipboard!
Now you can paste it elsewhere!

`+t)}).catch(s=>{console.error("Error copying to clipboard:",s)}):(n(t),alert(`URL copied to clipboard!
Now you can paste it elsewhere!

`+t))}),a}function createDownloadCSVButton(e,t){const a=createDownloadCSVLink(e.csv,t);let n=document.createElement("button");return n.innerText="CSV",n=addOpeningURLonButtonClick(n,a),n}function createDownloadJSONButton(e,t){const a=createDownloadJSONLink(e,t);let n=document.createElement("button");return n.innerText="JSON",n=addOpeningURLonButtonClick(n,a),n}function appendDownloadButtons(e,t,a){const n=createCSV(e),s=createDownloadCSVButton(n,t),r=createDownloadJSONButton(e,t);let o=null;a&&(o=createCopyURLButton(a));const l=document.getElementById("downloadButtonsContainer");l.innerHTML="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Download Graph Record As:",l.appendChild(r),l.appendChild(s),a&&l.appendChild(o)}urlParamsString&&document.addEventListener("DOMContentLoaded",()=>{loadFromUrlParams(globalFigDict,urlParamsString,"graph1",errorDiv$1);const e=document.getElementById("toggleSection2"),t=document.getElementById("toggleSection2"),a=document.getElementById("toReveal");e.style.display="none",t.style.display="none",a.style.display="block"});async function startJSONGrapherWebGUIListenersWithCallBack(e,t,a,n){try{const s=document.getElementById("toggleSection1"),r=document.getElementById("toggleSection2"),o=document.getElementById("toReveal");if(window.FileList&&window.File){const u=document.getElementById("file-selector");u&&u.addEventListener("change",async d=>{const p=d.target.files[0].name;p!=="Example1_JSONGrapher.json"&&p!=="Example2_JSONGrapher.json"&&p!=="Example3_JSONGrapher.json"&&(s.style.display="none",r.style.display="none",o.style.display="block");let m;[globalFigDict,m]=await e(globalFigDict,d,"change",t,a,n),globalFigDict&&appendDownloadButtons(globalFigDict,"mergedJSONGrapherRecord.json",m)});const c=document.getElementById("file-drop-area");c&&(c.addEventListener("dragover",async d=>{d.stopPropagation(),d.preventDefault(),d.dataTransfer.dropEffect="copy"}),c.addEventListener("drop",async d=>{d.preventDefault();const p=d.dataTransfer.files[0].name;p!=="Example1_JSONGrapher.json"&&p!=="Example2_JSONGrapher.json"&&p!=="Example3_JSONGrapher.json"&&(s.style.display="none",r.style.display="none",o.style.display="block");let m;[globalFigDict,m]=await e(globalFigDict,d,"drop",t,a,n),globalFigDict&&appendDownloadButtons(globalFigDict,"mergedJSONGrapherRecord.json",m)}))}const l=document.getElementById("load-from-url");l&&l.addEventListener("click",async()=>{const u=window.prompt("Enter the URL with a desired .json File:");if(isValidUrl$1(u)){const c=parseUrl$1(u);s.style.display="none",r.style.display="none",o.style.display="block";let d;[globalFigDict,d]=await e(globalFigDict,c,"url",t,a,n),globalFigDict&&appendDownloadButtons(globalFigDict,"mergedJSONGrapherRecord.json",d)}else console.error("No URL entered."),n.innerText+=`Error: Please enter a valid URL.
`})}catch(s){console.log("Error from setupJsonGrapher: ",s),n.innerText+=`Error fetching json-schema files...
`}}async function loadFromUrlParams(e,t,a,n){if(isValidUrl$1(t)){const s=parseUrl$1(t);let r;[globalFigDict,r]=await loadMergeAndPlotData(e,s,"url",a,n),globalFigDict&&appendDownloadButtons(globalFigDict,"mergedJSONGrapherRecord.json",r)}else console.error("No URL entered."),n.innerText+=`Error: Please enter a valid URL.
`}async function loadMergeAndPlotData(e,t,a,n,s,r){let o="Loading and plotting data, including evaluating any equations and running any simulations.";r.innerText+=o;let l=null;a==="url"&&(t=parseUrl$1(t),l=t);let{jsonified:u,recentFileName:c,fileType:d}=await loadData(t,a,r),f=u;f=await validateData(f,r);const p=await mergeAndplotData(e,f,c,n,s,r);return r.innerText=r.innerText.replace(o,""),[p,l]}async function loadData(e,t,a){let n,s,r,o=null;const[l,u]=await initializeUniversalSchemas(),c=u;if(t==="change"||t==="drop"){let d;t==="change"?d=e.target.files[0]:t==="drop"&&(d=e.dataTransfer.files[0]);const f=new FileReader;f.fileName=d.name;try{r=await readFileAsText(d)}catch(p){return a.innerText+=`Error: Failed to read file. ${p.message} 
`,{}}document.getElementById("file-selector").value="",n=findFileType(d.name),o=getBaseFileName(d.name)}if(t==="url"){n="json";const d=await loadJsonFromUrl(e);d.failed===!0&&(a.innerText=`Failed to load JSON: ${d.error||"Unknown error"}`),s=d.data}if(t==="change"||t==="drop")try{s=jsonifyData(n,r,c)}catch(d){a.innerText+=`Error: Data record could not be converted to JSON. If it is in a zipfile, unzip before uploading. Error Details: ${d.message} 
`}return{jsonified:s,recentFileName:o,fileType:n}}window.clearData=clearData;window.startJSONGrapherWebGUIListenersWithCallBack=startJSONGrapherWebGUIListenersWithCallBack;window.loadMergeAndPlotData=loadMergeAndPlotData;document.querySelector("#app").innerHTML="";let providedJson1=await GetJSONFromFile("./json_records/SrTiO3_rainbow.json"),providedJson2=await GetJSONFromFile("./json_records/SrTiO3_rainbow.json");const upperGraphOuterDiv=document.createElement("div");upperGraphOuterDiv.innerHTML=`
  <center>
    <h2>This is a simple JSONGrapher Wails App to Demonstrate Showing Graphs from JSON</h2>
    <div id="graphDivGraph2"></div>
    <div id="errorMessagesDivGraph2"></div>
    Click on 'Change Graph' to switch between graphs.
	<button class="btn" onclick="changeGraph()">Change Graph</button> 
	<button class="btn" onclick="clearUpperGraph()">Clear Upper Graph</button> 
  </center>
`;document.querySelector("#app").appendChild(upperGraphOuterDiv);const errorMessagesDivGraph2=document.getElementById("errorMessagesDivGraph2"),graphDivGraph2=document.getElementById("graphDivGraph2"),messagesToUserDiv="This is a message for the user upon loading.";await mergeAndplotData(null,providedJson1,"SrTiO3_rainbow.json",graphDivGraph2,messagesToUserDiv,errorMessagesDivGraph2);let currentGraphDataSource="SrTiO3_rainbow.json";async function changeGraph(){currentGraphDataSource==="SrTiO3_rainbow.json"?(await clearData(graphDivGraph2,document),providedJson2=await GetJSONFromFile("./json_records/DRIFTS_CO_Adsorption_onAu22_offset2d.json"),await mergeAndplotData(null,providedJson2,"DRIFTS_CO_Adsorption_onAu22_offset2d.json",graphDivGraph2,messagesToUserDiv,errorMessagesDivGraph2),currentGraphDataSource="DRIFTS_CO_Adsorption_onAu22_offset2d.json"):currentGraphDataSource==="DRIFTS_CO_Adsorption_onAu22_offset2d.json"&&(await clearData(graphDivGraph2,document),providedJson1=await GetJSONFromFile("./json_records/SrTiO3_rainbow.json"),await mergeAndplotData(null,providedJson1,"SrTiO3_rainbow.json",graphDivGraph2,messagesToUserDiv,errorMessagesDivGraph2),currentGraphDataSource="SrTiO3_rainbow.json")}async function clearUpperGraph(){await clearData(graphDivGraph2,document)}window.changeGraph=changeGraph;window.clearUpperGraph=clearUpperGraph;const lowerGraphOuterDiv=document.createElement("div");lowerGraphOuterDiv.innerHTML=`
  <center>
    <h2>This is a simple JSONGrapher Wails App to Demonstrate Showing Graphs from JSON</h2>
    <div id="graphDivGraph3"></div>
    <div id="errorMessagesDivGraph3"></div>
    Click on 'Create Lower Graph' to create an additional graph, and 'Clear Lower Graph' to remove it. 
	<button class="btn" onclick="createLowerGraph()">Create Lower Graph</button> 
	<button class="btn" onclick="clearLowerGraph()">Clear Lower Graph</button> 
  </center>
`;document.querySelector("#app").appendChild(lowerGraphOuterDiv);async function createLowerGraph(){const e=await CreateExampleJSON(),t=document.getElementById("errorMessagesDivGraph3"),a=document.getElementById("graphDivGraph3");await mergeAndplotData(null,e,null,a,"Click to create the lower graph or to clear it. Clicking to create multiple times will load the data multiple times.",t)}async function clearLowerGraph(){clearData(graphDivGraph3,document)}window.createLowerGraph=createLowerGraph;window.clearLowerGraph=clearLowerGraph;
